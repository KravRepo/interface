{
  "address": "0xDBD19864B0AaD341170153c6a3B2D065a2870760",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "_storageT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "valueLong",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "valueShort",
          "type": "int256"
        }
      ],
      "name": "AccFundingFeesStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AccRolloverFeesStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "percentProfit",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rolloverFees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "fundingFees",
          "type": "int256"
        }
      ],
      "name": "FeesCharged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FundingFeePerBlockPUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "ManagerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MaxNegativePnlOnOpenPUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueAbove",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueBelow",
          "type": "uint256"
        }
      ],
      "name": "OnePercentDepthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "onePercentDepthAbove",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "onePercentDepthBelow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rolloverFeePerBlockP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fundingFeePerBlockP",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct GNSPairInfosV6_1.PairParams",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "PairParamsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RolloverFeePerBlockPUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rollover",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "funding",
          "type": "int256"
        }
      ],
      "name": "TradeInitialAccFeesStored",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getAccFundingFeesLong",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getAccFundingFeesShort",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getAccFundingFeesUpdateBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getAccRolloverFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getAccRolloverFeesUpdateBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getFundingFeePerBlockP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getOnePercentDepthAbove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getOnePercentDepthBelow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        }
      ],
      "name": "getPairInfos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "onePercentDepthAbove",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "onePercentDepthBelow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rolloverFeePerBlockP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fundingFeePerBlockP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairInfosV6_1.PairParams[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "accPerCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairInfosV6_1.PairRolloverFees[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "accPerOiLong",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accPerOiShort",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairInfosV6_1.PairFundingFees[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getPendingAccFundingFees",
      "outputs": [
        {
          "internalType": "int256",
          "name": "valueLong",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "valueShort",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getPendingAccRolloverFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "getRolloverFeePerBlockP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        }
      ],
      "name": "getTradeFundingFee",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "accFundingFeesPerOi",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "endAccFundingFeesPerOi",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        }
      ],
      "name": "getTradeFundingFeePure",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeInitialAccFundingFeesPerOi",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeInitialAccRolloverFeesPerCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        }
      ],
      "name": "getTradeLiquidationPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rolloverFee",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "fundingFee",
          "type": "int256"
        }
      ],
      "name": "getTradeLiquidationPricePure",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeOpenedAfterUpdate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "tradeOpenInterest",
          "type": "uint256"
        }
      ],
      "name": "getTradePriceImpact",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceImpactP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceAfterImpact",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "openPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "startOpenInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradeOpenInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "onePercentDepth",
          "type": "uint256"
        }
      ],
      "name": "getTradePriceImpactPure",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceImpactP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceAfterImpact",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "name": "getTradeRolloverFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "accRolloverFeesPerCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAccRolloverFeesPerCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "name": "getTradeRolloverFeePure",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leverage",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "percentProfit",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "closingFee",
          "type": "uint256"
        }
      ],
      "name": "getTradeValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "percentProfit",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "rolloverFee",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "fundingFee",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "closingFee",
          "type": "uint256"
        }
      ],
      "name": "getTradeValuePure",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxNegativePnlOnOpenP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairFundingFees",
      "outputs": [
        {
          "internalType": "int256",
          "name": "accPerOiLong",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accPerOiShort",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdateBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "onePercentDepthAbove",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "onePercentDepthBelow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rolloverFeePerBlockP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingFeePerBlockP",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairRolloverFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "accPerCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdateBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setFundingFeePerBlockP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "setFundingFeePerBlockPArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setMaxNegativePnlOnOpenP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueAbove",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueBelow",
          "type": "uint256"
        }
      ],
      "name": "setOnePercentDepth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "valuesAbove",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "valuesBelow",
          "type": "uint256[]"
        }
      ],
      "name": "setOnePercentDepthArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "onePercentDepthAbove",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "onePercentDepthBelow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rolloverFeePerBlockP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fundingFeePerBlockP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairInfosV6_1.PairParams",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "setPairParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "onePercentDepthAbove",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "onePercentDepthBelow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rolloverFeePerBlockP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fundingFeePerBlockP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairInfosV6_1.PairParams[]",
          "name": "values",
          "type": "tuple[]"
        }
      ],
      "name": "setPairParamsArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setRolloverFeePerBlockP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "setRolloverFeePerBlockPArray",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        }
      ],
      "name": "storeTradeInitialAccFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tradeInitialAccFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rollover",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "funding",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "openedAfterUpdate",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9e9a89cb92a7e8b4184099ebc410547fa5845e050d1d87e26e7e772be0937a89",
  "receipt": {
    "to": null,
    "from": "0x284f1b4a9C4B9495F79de62a55337e0a07cCF3fF",
    "contractAddress": "0xDBD19864B0AaD341170153c6a3B2D065a2870760",
    "transactionIndex": 21,
    "gasUsed": "2374713",
    "logsBloom": "0x
    "blockHash": "0xc4734298420345aedff753b9fad99334cc85e5810f0fbec65ecc79c6ad757f90",
    "transactionHash": "0x9e9a89cb92a7e8b4184099ebc410547fa5845e050d1d87e26e7e772be0937a89",
    "logs": [],
    "blockNumber": 30988658,
    "cumulativeGasUsed": "4820449",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x896875b453161e89660F89e6D9dDe935c793aDe8"],
  "numDeployments": 1,
  "solcInputHash": "d9e911b7c48c581ed924bf1d179fe035",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"_storageT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"valueLong\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"valueShort\",\"type\":\"int256\"}],\"name\":\"AccFundingFeesStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AccRolloverFeesStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"percentProfit\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rolloverFees\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"fundingFees\",\"type\":\"int256\"}],\"name\":\"FeesCharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FundingFeePerBlockPUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"ManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MaxNegativePnlOnOpenPUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueAbove\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueBelow\",\"type\":\"uint256\"}],\"name\":\"OnePercentDepthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"onePercentDepthAbove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"onePercentDepthBelow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFeePerBlockP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingFeePerBlockP\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct GNSPairInfosV6_1.PairParams\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"PairParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RolloverFeePerBlockPUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rollover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"funding\",\"type\":\"int256\"}],\"name\":\"TradeInitialAccFeesStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getAccFundingFeesLong\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getAccFundingFeesShort\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getAccFundingFeesUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getAccRolloverFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getAccRolloverFeesUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getFundingFeePerBlockP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getOnePercentDepthAbove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getOnePercentDepthBelow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"}],\"name\":\"getPairInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"onePercentDepthAbove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"onePercentDepthBelow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFeePerBlockP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingFeePerBlockP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairInfosV6_1.PairParams[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"accPerCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairInfosV6_1.PairRolloverFees[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"accPerOiLong\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"accPerOiShort\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairInfosV6_1.PairFundingFees[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getPendingAccFundingFees\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"valueLong\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"valueShort\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getPendingAccRolloverFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"getRolloverFeePerBlockP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"getTradeFundingFee\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"accFundingFeesPerOi\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"endAccFundingFeesPerOi\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"getTradeFundingFeePure\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeInitialAccFundingFeesPerOi\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeInitialAccRolloverFeesPerCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"getTradeLiquidationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFee\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fundingFee\",\"type\":\"int256\"}],\"name\":\"getTradeLiquidationPricePure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeOpenedAfterUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tradeOpenInterest\",\"type\":\"uint256\"}],\"name\":\"getTradePriceImpact\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceImpactP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAfterImpact\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startOpenInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeOpenInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"onePercentDepth\",\"type\":\"uint256\"}],\"name\":\"getTradePriceImpactPure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"priceImpactP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAfterImpact\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"getTradeRolloverFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"accRolloverFeesPerCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAccRolloverFeesPerCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"getTradeRolloverFeePure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"percentProfit\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"closingFee\",\"type\":\"uint256\"}],\"name\":\"getTradeValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"percentProfit\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFee\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fundingFee\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"closingFee\",\"type\":\"uint256\"}],\"name\":\"getTradeValuePure\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxNegativePnlOnOpenP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairFundingFees\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"accPerOiLong\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"accPerOiShort\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"onePercentDepthAbove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"onePercentDepthBelow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFeePerBlockP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingFeePerBlockP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairRolloverFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accPerCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setFundingFeePerBlockP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setFundingFeePerBlockPArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxNegativePnlOnOpenP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueAbove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueBelow\",\"type\":\"uint256\"}],\"name\":\"setOnePercentDepth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"valuesAbove\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"valuesBelow\",\"type\":\"uint256[]\"}],\"name\":\"setOnePercentDepthArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"onePercentDepthAbove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"onePercentDepthBelow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFeePerBlockP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingFeePerBlockP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairInfosV6_1.PairParams\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"setPairParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"onePercentDepthAbove\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"onePercentDepthBelow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rolloverFeePerBlockP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingFeePerBlockP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairInfosV6_1.PairParams[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setPairParamsArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRolloverFeePerBlockP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"setRolloverFeePerBlockPArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"}],\"name\":\"storeTradeInitialAccFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradeInitialAccFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rollover\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"funding\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"openedAfterUpdate\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GNSPairInfosV6_1.sol\":\"GNSPairInfosV6_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/GNSPairInfosV6_1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport './interfaces/StorageInterfaceV5.sol';\\npragma solidity 0.8.14;\\n\\ncontract GNSPairInfosV6_1 {\\n\\n    // Addresses\\n    StorageInterfaceV5 immutable storageT;\\n    address public manager;\\n\\n    // Constant parameters\\n    uint constant PRECISION = 1e10;     // 10 decimals\\n    uint constant LIQ_THRESHOLD_P = 90; // -90% (of collateral)\\n\\n    // Adjustable parameters\\n    uint public maxNegativePnlOnOpenP = 40 * PRECISION; // PRECISION (%)\\n\\n    // Pair parameters\\n    struct PairParams{\\n        uint onePercentDepthAbove; // DAI\\n        uint onePercentDepthBelow; // DAI\\n        uint rolloverFeePerBlockP; // PRECISION (%)\\n        uint fundingFeePerBlockP;  // PRECISION (%)\\n    }\\n\\n    mapping(uint => PairParams) public pairParams;\\n\\n    // Pair acc funding fees\\n    struct PairFundingFees{\\n        int accPerOiLong;  // 1e18 (DAI)\\n        int accPerOiShort; // 1e18 (DAI)\\n        uint lastUpdateBlock;\\n    }\\n\\n    mapping(uint => PairFundingFees) public pairFundingFees;\\n\\n    // Pair acc rollover fees\\n    struct PairRolloverFees{\\n        uint accPerCollateral; // 1e18 (DAI)\\n        uint lastUpdateBlock;\\n    }\\n\\n    mapping(uint => PairRolloverFees) public pairRolloverFees;\\n\\n    // Trade initial acc fees\\n    struct TradeInitialAccFees{\\n        uint rollover; // 1e18 (DAI)\\n        int funding;   // 1e18 (DAI)\\n        bool openedAfterUpdate;\\n    }\\n\\n    mapping(\\n        address => mapping(\\n            uint => mapping(\\n                uint => TradeInitialAccFees\\n            )\\n        )\\n    ) public tradeInitialAccFees;\\n\\n    // Events\\n    event ManagerUpdated(address value);\\n    event MaxNegativePnlOnOpenPUpdated(uint value);\\n    \\n    event PairParamsUpdated(uint pairIndex, PairParams value);\\n    event OnePercentDepthUpdated(uint pairIndex, uint valueAbove, uint valueBelow);\\n    event RolloverFeePerBlockPUpdated(uint pairIndex, uint value);\\n    event FundingFeePerBlockPUpdated(uint pairIndex, uint value);\\n\\n    event TradeInitialAccFeesStored(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        uint rollover,\\n        int funding\\n    );\\n\\n    event AccFundingFeesStored(uint pairIndex, int valueLong, int valueShort);\\n    event AccRolloverFeesStored(uint pairIndex, uint value);\\n\\n    event FeesCharged(\\n        uint pairIndex,\\n        bool long,\\n        uint collateral,   // 1e18 (DAI)\\n        uint leverage,\\n        int percentProfit, // PRECISION (%)\\n        uint rolloverFees, // 1e18 (DAI)\\n        int fundingFees    // 1e18 (DAI)\\n    );\\n\\n    constructor(StorageInterfaceV5 _storageT){\\n        storageT = _storageT;\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov(){\\n        require(msg.sender == storageT.gov(), \\\"GOV_ONLY\\\");\\n        _;\\n    }\\n    modifier onlyManager(){\\n        require(msg.sender == manager, \\\"MANAGER_ONLY\\\");\\n        _;\\n    }\\n    modifier onlyCallbacks(){\\n        require(msg.sender == storageT.callbacks(), \\\"CALLBACKS_ONLY\\\");\\n        _;\\n    }\\n\\n    // Set manager address\\n    function setManager(address _manager) external onlyGov{\\n        manager = _manager;\\n\\n        emit ManagerUpdated(_manager);\\n    }\\n\\n    // Set max negative PnL % on trade opening\\n    function setMaxNegativePnlOnOpenP(uint value) external onlyManager{\\n        maxNegativePnlOnOpenP = value;\\n\\n        emit MaxNegativePnlOnOpenPUpdated(value);\\n    }\\n\\n    // Set parameters for pair\\n    function setPairParams(uint pairIndex, PairParams memory value) public onlyManager{\\n        storeAccRolloverFees(pairIndex);\\n        storeAccFundingFees(pairIndex);\\n\\n        pairParams[pairIndex] = value;\\n\\n        emit PairParamsUpdated(pairIndex, value);\\n    }\\n    function setPairParamsArray(\\n        uint[] memory indices,\\n        PairParams[] memory values\\n    ) external onlyManager{\\n        require(indices.length == values.length, \\\"WRONG_LENGTH\\\");\\n\\n        for(uint i = 0; i < indices.length; i++){\\n            setPairParams(indices[i], values[i]);\\n        }\\n    }\\n\\n    // Set one percent depth for pair\\n    function setOnePercentDepth(\\n        uint pairIndex,\\n        uint valueAbove,\\n        uint valueBelow\\n    ) public onlyManager{\\n        PairParams storage p = pairParams[pairIndex];\\n\\n        p.onePercentDepthAbove = valueAbove;\\n        p.onePercentDepthBelow = valueBelow;\\n        \\n        emit OnePercentDepthUpdated(pairIndex, valueAbove, valueBelow);\\n    }\\n    function setOnePercentDepthArray(\\n        uint[] memory indices,\\n        uint[] memory valuesAbove,\\n        uint[] memory valuesBelow\\n    ) external onlyManager{\\n        require(indices.length == valuesAbove.length\\n            && indices.length == valuesBelow.length, \\\"WRONG_LENGTH\\\");\\n\\n        for(uint i = 0; i < indices.length; i++){\\n            setOnePercentDepth(indices[i], valuesAbove[i], valuesBelow[i]);\\n        }\\n    }\\n\\n    // Set rollover fee for pair\\n    function setRolloverFeePerBlockP(uint pairIndex, uint value) public onlyManager{\\n        require(value <= 25000000, \\\"TOO_HIGH\\\"); // \\u2248 100% per day\\n\\n        storeAccRolloverFees(pairIndex);\\n\\n        pairParams[pairIndex].rolloverFeePerBlockP = value;\\n        \\n        emit RolloverFeePerBlockPUpdated(pairIndex, value);\\n    }\\n    function setRolloverFeePerBlockPArray(\\n        uint[] memory indices,\\n        uint[] memory values\\n    ) external onlyManager{\\n        require(indices.length == values.length, \\\"WRONG_LENGTH\\\");\\n\\n        for(uint i = 0; i < indices.length; i++){\\n            setRolloverFeePerBlockP(indices[i], values[i]);\\n        }\\n    }\\n\\n    // Set funding fee for pair\\n    function setFundingFeePerBlockP(uint pairIndex, uint value) public onlyManager{\\n        require(value <= 10000000, \\\"TOO_HIGH\\\"); // \\u2248 40% per day\\n\\n        storeAccFundingFees(pairIndex);\\n\\n        pairParams[pairIndex].fundingFeePerBlockP = value;\\n        \\n        emit FundingFeePerBlockPUpdated(pairIndex, value);\\n    }\\n    function setFundingFeePerBlockPArray(\\n        uint[] memory indices,\\n        uint[] memory values\\n    ) external onlyManager{\\n        require(indices.length == values.length, \\\"WRONG_LENGTH\\\");\\n\\n        for(uint i = 0; i < indices.length; i++){\\n            setFundingFeePerBlockP(indices[i], values[i]);\\n        }\\n    }\\n\\n    // Store trade details when opened (acc fee values)\\n    function storeTradeInitialAccFees(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        bool long\\n    ) external onlyCallbacks{\\n        storeAccFundingFees(pairIndex);\\n\\n        TradeInitialAccFees storage t = tradeInitialAccFees[trader][pairIndex][index];\\n\\n        t.rollover = getPendingAccRolloverFees(pairIndex);\\n\\n        t.funding = long ? \\n            pairFundingFees[pairIndex].accPerOiLong :\\n            pairFundingFees[pairIndex].accPerOiShort;\\n\\n        t.openedAfterUpdate = true;\\n\\n        emit TradeInitialAccFeesStored(trader, pairIndex, index, t.rollover, t.funding);\\n    }\\n\\n    // Acc rollover fees (store right before fee % update)\\n    function storeAccRolloverFees(uint pairIndex) private{\\n        PairRolloverFees storage r = pairRolloverFees[pairIndex];\\n\\n        r.accPerCollateral = getPendingAccRolloverFees(pairIndex);\\n        r.lastUpdateBlock = block.number;\\n\\n        emit AccRolloverFeesStored(pairIndex, r.accPerCollateral);\\n    }\\n    function getPendingAccRolloverFees(\\n        uint pairIndex\\n    ) public view returns(uint){ // 1e18 (DAI)\\n        PairRolloverFees storage r = pairRolloverFees[pairIndex];\\n        \\n        return r.accPerCollateral +\\n            (block.number - r.lastUpdateBlock)\\n            * pairParams[pairIndex].rolloverFeePerBlockP\\n            * 1e18 / PRECISION / 100;\\n    }\\n\\n    // Acc funding fees (store right before trades opened / closed and fee % update)\\n    function storeAccFundingFees(uint pairIndex) private{\\n        PairFundingFees storage f = pairFundingFees[pairIndex];\\n\\n        (f.accPerOiLong, f.accPerOiShort) = getPendingAccFundingFees(pairIndex);\\n        f.lastUpdateBlock = block.number;\\n\\n        emit AccFundingFeesStored(pairIndex, f.accPerOiLong, f.accPerOiShort);\\n    }\\n    function getPendingAccFundingFees(uint pairIndex) public view returns(\\n        int valueLong,\\n        int valueShort\\n    ){\\n        PairFundingFees storage f = pairFundingFees[pairIndex];\\n\\n        valueLong = f.accPerOiLong;\\n        valueShort = f.accPerOiShort;\\n\\n        int openInterestDaiLong = int(storageT.openInterestDai(pairIndex, 0));\\n        int openInterestDaiShort = int(storageT.openInterestDai(pairIndex, 1));\\n\\n        int fundingFeesPaidByLongs = (openInterestDaiLong - openInterestDaiShort)\\n            * int(block.number - f.lastUpdateBlock)\\n            * int(pairParams[pairIndex].fundingFeePerBlockP)\\n            / int(PRECISION) / 100;\\n\\n        if(openInterestDaiLong > 0){\\n            valueLong += fundingFeesPaidByLongs * 1e18\\n                / openInterestDaiLong;\\n        }\\n\\n        if(openInterestDaiShort > 0){\\n            valueShort += fundingFeesPaidByLongs * 1e18 * (-1)\\n                / openInterestDaiShort;\\n        }\\n    }\\n\\n    // Dynamic price impact value on trade opening\\n    function getTradePriceImpact(\\n        uint openPrice,        // PRECISION\\n        uint pairIndex,\\n        bool long,\\n        uint tradeOpenInterest // 1e18 (DAI)\\n    ) external view returns(\\n        uint priceImpactP,     // PRECISION (%)\\n        uint priceAfterImpact  // PRECISION\\n    ){\\n        (priceImpactP, priceAfterImpact) = getTradePriceImpactPure(\\n            openPrice,\\n            long,\\n            storageT.openInterestDai(pairIndex, long ? 0 : 1),\\n            tradeOpenInterest,\\n            long ?\\n                pairParams[pairIndex].onePercentDepthAbove :\\n                pairParams[pairIndex].onePercentDepthBelow\\n        );\\n    }\\n    function getTradePriceImpactPure(\\n        uint openPrice,         // PRECISION\\n        bool long,\\n        uint startOpenInterest, // 1e18 (DAI)\\n        uint tradeOpenInterest, // 1e18 (DAI)\\n        uint onePercentDepth\\n    ) public pure returns(\\n        uint priceImpactP,      // PRECISION (%)\\n        uint priceAfterImpact   // PRECISION\\n    ){\\n        if(onePercentDepth == 0){\\n            return (0, openPrice);\\n        }\\n\\n        priceImpactP = (startOpenInterest + tradeOpenInterest / 2)\\n            * PRECISION / 1e18 / onePercentDepth;\\n        \\n        uint priceImpact = priceImpactP * openPrice / PRECISION / 100;\\n\\n        priceAfterImpact = long ? openPrice + priceImpact : openPrice - priceImpact;\\n    }\\n\\n    // Rollover fee value\\n    function getTradeRolloverFee(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        uint collateral // 1e18 (DAI)\\n    ) public view returns(uint){ // 1e18 (DAI)\\n        TradeInitialAccFees memory t = tradeInitialAccFees[trader][pairIndex][index];\\n\\n        if(!t.openedAfterUpdate){\\n            return 0;\\n        }\\n\\n        return getTradeRolloverFeePure(\\n            t.rollover,\\n            getPendingAccRolloverFees(pairIndex),\\n            collateral\\n        );\\n    }\\n    function getTradeRolloverFeePure(\\n        uint accRolloverFeesPerCollateral,\\n        uint endAccRolloverFeesPerCollateral,\\n        uint collateral // 1e18 (DAI)\\n    ) public pure returns(uint){ // 1e18 (DAI)\\n        return (endAccRolloverFeesPerCollateral - accRolloverFeesPerCollateral)\\n            * collateral / 1e18;\\n    }\\n\\n    // Funding fee value\\n    function getTradeFundingFee(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        bool long,\\n        uint collateral, // 1e18 (DAI)\\n        uint leverage\\n    ) public view returns(\\n        int // 1e18 (DAI) | Positive => Fee, Negative => Reward\\n    ){\\n        TradeInitialAccFees memory t = tradeInitialAccFees[trader][pairIndex][index];\\n\\n        if(!t.openedAfterUpdate){\\n            return 0;\\n        }\\n\\n        (int pendingLong, int pendingShort) = getPendingAccFundingFees(pairIndex);\\n\\n        return getTradeFundingFeePure(\\n            t.funding,\\n            long ? pendingLong : pendingShort,\\n            collateral,\\n            leverage\\n        );\\n    }\\n    function getTradeFundingFeePure(\\n        int accFundingFeesPerOi,\\n        int endAccFundingFeesPerOi,\\n        uint collateral, // 1e18 (DAI)\\n        uint leverage\\n    ) public pure returns(\\n        int // 1e18 (DAI) | Positive => Fee, Negative => Reward\\n    ){\\n        return (endAccFundingFeesPerOi - accFundingFeesPerOi)\\n            * int(collateral) * int(leverage) / 1e18;\\n    }\\n\\n    // Liquidation price value after rollover and funding fees\\n    function getTradeLiquidationPrice(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        uint openPrice,  // PRECISION\\n        bool long,\\n        uint collateral, // 1e18 (DAI)\\n        uint leverage\\n    ) external view returns(uint){ // PRECISION\\n        return getTradeLiquidationPricePure(\\n            openPrice,\\n            long,\\n            collateral,\\n            leverage,\\n            getTradeRolloverFee(trader, pairIndex, index, collateral),\\n            getTradeFundingFee(trader, pairIndex, index, long, collateral, leverage)\\n        );\\n    }\\n    function getTradeLiquidationPricePure(\\n        uint openPrice,   // PRECISION\\n        bool long,\\n        uint collateral,  // 1e18 (DAI)\\n        uint leverage,\\n        uint rolloverFee, // 1e18 (DAI)\\n        int fundingFee    // 1e18 (DAI)\\n    ) public pure returns(uint){ // PRECISION\\n        int liqPriceDistance = int(openPrice) * (\\n                int(collateral * LIQ_THRESHOLD_P / 100)\\n                - int(rolloverFee) - fundingFee\\n            ) / int(collateral) / int(leverage);\\n\\n        int liqPrice = long ?\\n            int(openPrice) - liqPriceDistance :\\n            int(openPrice) + liqPriceDistance;\\n\\n        return liqPrice > 0 ? uint(liqPrice) : 0;\\n    }\\n\\n    // Dai sent to trader after PnL and fees\\n    function getTradeValue(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        bool long,\\n        uint collateral,   // 1e18 (DAI)\\n        uint leverage,\\n        int percentProfit, // PRECISION (%)\\n        uint closingFee    // 1e18 (DAI)\\n    ) external onlyCallbacks returns(uint amount){ // 1e18 (DAI)\\n        storeAccFundingFees(pairIndex);\\n\\n        uint r = getTradeRolloverFee(trader, pairIndex, index, collateral);\\n        int f = getTradeFundingFee(trader, pairIndex, index, long, collateral, leverage);\\n\\n        amount = getTradeValuePure(collateral, percentProfit, r, f, closingFee);\\n\\n        emit FeesCharged(pairIndex, long, collateral, leverage, percentProfit, r, f);\\n    }\\n    function getTradeValuePure(\\n        uint collateral,   // 1e18 (DAI)\\n        int percentProfit, // PRECISION (%)\\n        uint rolloverFee,  // 1e18 (DAI)\\n        int fundingFee,    // 1e18 (DAI)\\n        uint closingFee    // 1e18 (DAI)\\n    ) public pure returns(uint){ // 1e18 (DAI)\\n        int value = int(collateral)\\n            + int(collateral) * percentProfit / int(PRECISION) / 100\\n            - int(rolloverFee) - fundingFee;\\n\\n        if(value <= int(collateral) * int(100 - LIQ_THRESHOLD_P) / 100){\\n            return 0;\\n        }\\n\\n        value -= int(closingFee);\\n\\n        return value > 0 ? uint(value) : 0;\\n    }\\n\\n    // Useful getters\\n    function getPairInfos(uint[] memory indices) external view returns(\\n        PairParams[] memory,\\n        PairRolloverFees[] memory,\\n        PairFundingFees[] memory\\n    ){\\n        PairParams[] memory params = new PairParams[](indices.length);\\n        PairRolloverFees[] memory rolloverFees = new PairRolloverFees[](indices.length);\\n        PairFundingFees[] memory fundingFees = new PairFundingFees[](indices.length);\\n\\n        for(uint i = 0; i < indices.length; i++){\\n            uint index = indices[i];\\n\\n            params[i] = pairParams[index];\\n            rolloverFees[i] = pairRolloverFees[index];\\n            fundingFees[i] = pairFundingFees[index];\\n        }\\n\\n        return (params, rolloverFees, fundingFees);\\n    }\\n    function getOnePercentDepthAbove(uint pairIndex) external view returns(uint){\\n        return pairParams[pairIndex].onePercentDepthAbove;\\n    }\\n    function getOnePercentDepthBelow(uint pairIndex) external view returns(uint){\\n        return pairParams[pairIndex].onePercentDepthBelow;\\n    }\\n    function getRolloverFeePerBlockP(uint pairIndex) external view returns(uint){\\n        return pairParams[pairIndex].rolloverFeePerBlockP;\\n    }\\n    function getFundingFeePerBlockP(uint pairIndex) external view returns(uint){\\n        return pairParams[pairIndex].fundingFeePerBlockP;\\n    }\\n    function getAccRolloverFees(uint pairIndex) external view returns(uint){\\n        return pairRolloverFees[pairIndex].accPerCollateral;\\n    }\\n    function getAccRolloverFeesUpdateBlock(uint pairIndex) external view returns(uint){\\n        return pairRolloverFees[pairIndex].lastUpdateBlock;\\n    }\\n    function getAccFundingFeesLong(uint pairIndex) external view returns(int){\\n        return pairFundingFees[pairIndex].accPerOiLong;\\n    }\\n    function getAccFundingFeesShort(uint pairIndex) external view returns(int){\\n        return pairFundingFees[pairIndex].accPerOiShort;\\n    }\\n    function getAccFundingFeesUpdateBlock(uint pairIndex) external view returns(uint){\\n        return pairFundingFees[pairIndex].lastUpdateBlock;\\n    }\\n    function getTradeInitialAccRolloverFeesPerCollateral(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns(uint){\\n        return tradeInitialAccFees[trader][pairIndex][index].rollover;\\n    }\\n    function getTradeInitialAccFundingFeesPerOi(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns(int){\\n        return tradeInitialAccFees[trader][pairIndex][index].funding;\\n    }\\n    function getTradeOpenedAfterUpdate(\\n        address trader,\\n        uint pairIndex,\\n        uint index\\n    ) external view returns(bool){\\n        return tradeInitialAccFees[trader][pairIndex][index].openedAfterUpdate;\\n    }\\n}\",\"keccak256\":\"0x5441e3a9950266abd7712b5acae562088df8d89d27cc83d9ed56998382a98a30\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface NftInterfaceV5{\\n    function balanceOf(address) external view returns (uint);\\n    function ownerOf(uint) external view returns (address);\\n    function transferFrom(address, address, uint) external;\\n    function tokenOfOwnerByIndex(address, uint) external view returns(uint);\\n}\",\"keccak256\":\"0xc15a2883e44dce70305e896f2492f485c77f1a01595a9bb42d2662a22cfa5274\",\"license\":\"MIT\"},\"contracts/interfaces/PairsStorageInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface PairsStorageInterfaceV6{\\n    enum FeedCalculation { DEFAULT, INVERT, COMBINE }    // FEED 1, 1 / (FEED 1), (FEED 1)/(FEED 2)\\n    struct Feed{ address feed1; address feed2; FeedCalculation feedCalculation; uint maxDeviationP; } // PRECISION (%)\\n    function incrementCurrentOrderId() external returns(uint);\\n    function updateGroupCollateral(uint, uint, bool, bool) external;\\n    function pairJob(uint) external returns(string memory, string memory, bytes32, uint);\\n    function pairFeed(uint) external view returns(Feed memory);\\n    function pairSpreadP(uint) external view returns(uint);\\n    function pairMinLeverage(uint) external view returns(uint);\\n    function pairMaxLeverage(uint) external view returns(uint);\\n    function groupMaxCollateral(uint) external view returns(uint);\\n    function groupCollateral(uint, bool) external view returns(uint);\\n    function guaranteedSlEnabled(uint) external view returns(bool);\\n    function pairOpenFeeP(uint) external view returns(uint);\\n    function pairCloseFeeP(uint) external view returns(uint);\\n    function pairOracleFeeP(uint) external view returns(uint);\\n    function pairNftLimitOrderFeeP(uint) external view returns(uint);\\n    function pairReferralFeeP(uint) external view returns(uint);\\n    function pairMinLevPosDai(uint) external view returns(uint);\\n}\",\"keccak256\":\"0x74f54cf7593d734351ff34e0f86065cc89bb5a5b10b8618a9438d0ea2e4918a1\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport './UniswapRouterInterfaceV5.sol';\\nimport './TokenInterfaceV5.sol';\\nimport './NftInterfaceV5.sol';\\nimport './VaultInterfaceV5.sol';\\nimport './PairsStorageInterfaceV6.sol';\\npragma solidity 0.8.14;\\n\\ninterface StorageInterfaceV5{\\n    enum LimitOrder { TP, SL, LIQ, OPEN }\\n    struct Trader{\\n        uint leverageUnlocked;\\n        address referral;\\n        uint referralRewardsTotal;  // 1e18\\n    }\\n    struct Trade{\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken;       // 1e18\\n        uint positionSizeDai;       // 1e18\\n        uint openPrice;             // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp;                    // PRECISION\\n        uint sl;                    // PRECISION\\n    }\\n    struct TradeInfo{\\n        uint tokenId;\\n        uint tokenPriceDai;         // PRECISION\\n        uint openInterestDai;       // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder{\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize;          // 1e18 (DAI or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp;                    // PRECISION (%)\\n        uint sl;                    // PRECISION (%)\\n        uint minPrice;              // PRECISION\\n        uint maxPrice;              // PRECISION\\n        uint block;\\n        uint tokenId;               // index in supportedTokens\\n    }\\n    struct PendingMarketOrder{\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice;           // PRECISION\\n        uint slippageP;             // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId;               // index in supportedTokens\\n    }\\n    struct PendingNftOrder{\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n    function PRECISION() external pure returns(uint);\\n    function gov() external view returns(address);\\n    function dev() external view returns(address);\\n    function dai() external view returns(TokenInterfaceV5);\\n    // function token() external view returns(TokenInterfaceV5);\\n    function linkErc677() external view returns(TokenInterfaceV5);\\n    function tokenDaiRouter() external view returns(UniswapRouterInterfaceV5);\\n    function priceAggregator() external view returns(AggregatorInterfaceV6);\\n    function vault() external view returns(VaultInterfaceV5);\\n    function trading() external view returns(address);\\n    function callbacks() external view returns(address);\\n    function handleTokens(address,uint,bool) external;\\n    function transferDai(address, address, uint) external;\\n    function transferLinkToAggregator(address, uint, uint) external;\\n    function unregisterTrade(address, uint, uint) external;\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n    function hasOpenLimitOrder(address, uint, uint) external view returns(bool);\\n    function storePendingMarketOrder(PendingMarketOrder memory, uint, bool) external;\\n    function storeReferral(address, address) external;\\n    function openTrades(address, uint, uint) external view returns(Trade memory);\\n    function openTradesInfo(address, uint, uint) external view returns(TradeInfo memory);\\n    function updateSl(address, uint, uint, uint) external;\\n    function updateTp(address, uint, uint, uint) external;\\n    function getOpenLimitOrder(address, uint, uint) external view returns(OpenLimitOrder memory);\\n    function spreadReductionsP(uint) external view returns(uint);\\n    function positionSizeTokenDynamic(uint,uint) external view returns(uint);\\n    function maxSlP() external view returns(uint);\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n    function reqID_pendingMarketOrder(uint) external view returns(PendingMarketOrder memory);\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n    function firstEmptyTradeIndex(address, uint) external view returns(uint);\\n    function firstEmptyOpenLimitIndex(address, uint) external view returns(uint);\\n    function increaseNftRewards(uint, uint) external;\\n    function nftSuccessTimelock() external view returns(uint);\\n    function currentPercentProfit(uint,uint,bool,uint) external view returns(int);\\n    function reqID_pendingNftOrder(uint) external view returns(PendingNftOrder memory);\\n    function setNftLastSuccess(uint) external;\\n    function updateTrade(Trade memory) external;\\n    function nftLastSuccess(uint) external view returns(uint);\\n    function unregisterPendingNftOrder(uint) external;\\n    function handleDevGovFees(uint, uint, bool, bool) external returns(uint);\\n    function distributeLpRewards(uint) external;\\n    function getReferral(address) external view returns(address);\\n    function increaseReferralRewards(address, uint) external;\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n    function setLeverageUnlocked(address, uint) external;\\n    function getLeverageUnlocked(address) external view returns(uint);\\n    function openLimitOrdersCount(address, uint) external view returns(uint);\\n    function maxOpenLimitOrdersPerPair() external view returns(uint);\\n    function openTradesCount(address, uint) external view returns(uint);\\n    function pendingMarketOpenCount(address, uint) external view returns(uint);\\n    function pendingMarketCloseCount(address, uint) external view returns(uint);\\n    function maxTradesPerPair() external view returns(uint);\\n    function maxTradesPerBlock() external view returns(uint);\\n    function tradesPerBlock(uint) external view returns(uint);\\n    function pendingOrderIdsCount(address) external view returns(uint);\\n    function maxPendingMarketOrders() external view returns(uint);\\n    function maxGainP() external view returns(uint);\\n    function defaultLeverageUnlocked() external view returns(uint);\\n    function openInterestDai(uint, uint) external view returns(uint);\\n    function getPendingOrderIds(address) external view returns(uint[] memory);\\n    function traders(address) external view returns(Trader memory);\\n    function nfts(uint) external view returns(NftInterfaceV5);\\n}\\n\\ninterface AggregatorInterfaceV6{\\n    enum OrderType { MARKET_OPEN, MARKET_CLOSE, LIMIT_OPEN, LIMIT_CLOSE, UPDATE_SL }\\n    function pairsStorage() external view returns(PairsStorageInterfaceV6);\\n    function nftRewards() external view returns(NftRewardsInterfaceV6);\\n    function getPrice(uint,OrderType,uint) external returns(uint);\\n    function tokenPriceDai() external view returns(uint);\\n    function linkFee(uint,uint) external view returns(uint);\\n    function tokenDaiReservesLp() external view returns(uint, uint);\\n    function pendingSlOrders(uint) external view returns(PendingSl memory);\\n    function storePendingSlOrder(uint orderId, PendingSl calldata p) external;\\n    function unregisterPendingSlOrder(uint orderId) external;\\n    struct PendingSl{address trader; uint pairIndex; uint index; uint openPrice; bool buy; uint newSl; }\\n}\\n\\ninterface NftRewardsInterfaceV6{\\n    struct TriggeredLimitId{ address trader; uint pairIndex; uint index; StorageInterfaceV5.LimitOrder order; }\\n    enum OpenLimitOrderType{ LEGACY, REVERSAL, MOMENTUM }\\n    function storeFirstToTrigger(TriggeredLimitId calldata, address) external;\\n    function storeTriggerSameBlock(TriggeredLimitId calldata, address) external;\\n    function unregisterTrigger(TriggeredLimitId calldata) external;\\n    function distributeNftReward(TriggeredLimitId calldata, uint) external;\\n    function openLimitOrderTypes(address, uint, uint) external view returns(OpenLimitOrderType);\\n    function setOpenLimitOrderType(address, uint, uint, OpenLimitOrderType) external;\\n    function triggered(TriggeredLimitId calldata) external view returns(bool);\\n    function timedOut(TriggeredLimitId calldata) external view returns(bool);\\n}\",\"keccak256\":\"0x02c06cbb3f187939133f2c989e77a5e0b0d371444071f9a8d3ae1a3ed61fe865\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface TokenInterfaceV5{\\n    function burn(address, uint256) external;\\n    function mint(address, uint256) external;\\n    function transfer(address, uint256) external returns (bool);\\n    function transferFrom(address, address, uint256) external returns(bool);\\n    function balanceOf(address) external view returns(uint256);\\n    function hasRole(bytes32, address) external view returns (bool);\\n    function approve(address, uint256) external returns (bool);\\n    function allowance(address, address) external view returns (uint256);\\n}\",\"keccak256\":\"0x839cb0952ddb74fd2cc563cbc511a7f4cec56599cb7cc3502f97c32327f2fe58\",\"license\":\"MIT\"},\"contracts/interfaces/UniswapRouterInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface UniswapRouterInterfaceV5{\\n\\tfunction swapExactTokensForTokens(\\n\\t\\tuint amountIn,\\n\\t\\tuint amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint deadline\\n\\t) external returns (uint[] memory amounts);\\n\\n\\tfunction swapTokensForExactTokens(\\n\\t\\tuint amountOut,\\n\\t\\tuint amountInMax,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint deadline\\n\\t) external returns (uint[] memory amounts);\\n}\",\"keccak256\":\"0x366be084acb30ed686cc7f4999f30568ebdb11e6cc5909c6b24f95092b4dbddf\",\"license\":\"MIT\"},\"contracts/interfaces/VaultInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface VaultInterfaceV5{\\n\\tfunction sendDaiToTrader(address, uint) external;\\n\\tfunction receiveDaiFromTrader(address, uint, uint) external;\\n\\tfunction currentBalanceDai() external view returns(uint);\\n\\tfunction distributeRewardDai(uint) external;\\n}\",\"keccak256\":\"0xbbd6a93a058b4da7c2b5114ece35d743ef6099d928020835664169a0b5895825\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052620000166402540be40060286200005b565b6001553480156200002657600080fd5b5060405162002a9938038062002a99833981016040819052620000499162000089565b6001600160a01b0316608052620000bb565b60008160001904831182151516156200008457634e487b7160e01b600052601160045260246000fd5b500290565b6000602082840312156200009c57600080fd5b81516001600160a01b0381168114620000b457600080fd5b9392505050565b60805161299f620000fa600039600081816108570152818161117d015281816114660152818161197c01528181611c3a0152611cd8015261299f6000f3fe608060405234801561001057600080fd5b50600436106102de5760003560e01c80636f6af69711610186578063bf1db1f6116100e3578063ee52e5fe11610097578063f6c50efe11610071578063f6c50efe146107b4578063fcc37c87146107c7578063fe3cfd8c146107da57600080fd5b8063ee52e5fe1461075e578063f0270f331461077e578063f6960654146107a157600080fd5b8063c2cc670d116100c8578063c2cc670d14610718578063cfc23e9e1461072b578063d0ebdbe71461074b57600080fd5b8063bf1db1f6146106de578063c22ff7bf1461070557600080fd5b80639cf9c9391161013a578063a77e8e2a1161011f578063a77e8e2a146106a5578063ab21a05c146106b8578063b74243ba146106cb57600080fd5b80639cf9c93914610648578063a49e87881461069257600080fd5b80637ea95f321161016b5780637ea95f321461061957806380f6cfc21461062c5780639c625e1e1461063557600080fd5b80636f6af697146105f35780637884274f1461060657600080fd5b8063338139ad1161023f578063481c6a75116101f35780636bc84d59116101cd5780636bc84d59146105ba5780636bcbe860146105cd5780636ceaca67146105e057600080fd5b8063481c6a751461051c57806358f796bc146105475780635ed5804e1461055a57600080fd5b80633df7fd72116102245780633df7fd721461046e57806342dee1ad1461048157806346dbab36146104d857600080fd5b8063338139ad14610437578063351533e71461045b57600080fd5b806312fdefd9116102965780632b180a7d1161027b5780632b180a7d146103de5780632d15e4e01461040157806331556d2f1461042457600080fd5b806312fdefd91461039357806321adc48f146103bb57600080fd5b80630e6bc39a116102c75780630e6bc39a1461033c5780630ea777701461035157806312b6566e1461037357600080fd5b80630dd34f57146102e35780630e0052fc1461030b575b600080fd5b6102f66102f1366004611ef7565b61081b565b60405190151581526020015b60405180910390f35b61032e610319366004611f2c565b60009081526004602052604090206001015490565b604051908152602001610302565b61034f61034a366004611f5a565b610855565b005b61036461035f366004612078565b610a11565b604051610302939291906120fe565b61032e610381366004611f2c565b60009081526004602052604090205490565b6103a66103a13660046121b9565b610cc0565b60408051928352602083019190915201610302565b61032e6103c9366004611f2c565b60009081526003602052604090206001015490565b61032e6103ec366004611f2c565b60009081526002602052604090206001015490565b61032e61040f366004611f2c565b60009081526003602052604090206002015490565b61034f610432366004612265565b610d71565b61032e610445366004611f2c565b6000908152600260208190526040909120015490565b61034f61046936600461232b565b610e59565b61034f61047c3660046123b3565b610f69565b6104b861048f366004611f2c565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b604080519485526020850193909352918301526060820152608001610302565b61032e6104e6366004611ef7565b6001600160a01b038316600090815260056020908152604080832085845282528083208484529091529020600101549392505050565b60005461052f906001600160a01b031681565b6040516001600160a01b039091168152602001610302565b61032e6105553660046123e0565b611035565b61059d610568366004611ef7565b600560209081526000938452604080852082529284528284209052825290208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610302565b61032e6105c836600461241b565b6110b6565b61032e6105db366004612480565b6110e5565b61032e6105ee3660046124ce565b611179565b61034f61060136600461253a565b6112f4565b61034f610614366004611f2c565b6113d7565b6103a661062736600461259e565b61145c565b61032e60015481565b61032e6106433660046125db565b611561565b610677610656366004611f2c565b60036020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610302565b61034f6106a036600461253a565b61158b565b61032e6106b3366004612607565b61166e565b61032e6106c6366004611f2c565b6116ac565b61034f6106d9366004612639565b61171f565b6103a66106ec366004611f2c565b6004602052600090815260409020805460019091015482565b61032e61071336600461265b565b6117fb565b61034f610726366004612639565b61189f565b61032e610739366004611f2c565b60009081526002602052604090205490565b61034f610759366004612696565b61197a565b61032e61076c366004611f2c565b60009081526003602052604090205490565b61032e61078c366004611f2c565b60009081526002602052604090206003015490565b61034f6107af3660046125db565b611ac2565b61032e6107c23660046126b3565b611b6b565b6103a66107d5366004611f2c565b611c05565b61032e6107e8366004611ef7565b6001600160a01b038316600090815260056020908152604080832085845282528083208484529091529020549392505050565b6001600160a01b0383166000908152600560209081526040808320858452825280832084845290915290206002015460ff165b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662b127836040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d6919061270d565b6001600160a01b0316336001600160a01b03161461092c5760405162461bcd60e51b815260206004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b60448201526064015b60405180910390fd5b61093583611e25565b6001600160a01b038416600090815260056020908152604080832086845282528083208584529091529020610969846116ac565b81558161098757600084815260036020526040902060010154610997565b6000848152600360205260409020545b600182810182905560028301805460ff191690911790558154604080516001600160a01b038916815260208101889052908101869052606081019190915260808101919091527f4e58eed9e01cebfd4256725d6d1ce9fa694faa7ac5312e75af02360f453d048e9060a00160405180910390a15050505050565b60608060606000845167ffffffffffffffff811115610a3257610a32611fa2565b604051908082528060200260200182016040528015610a8e57816020015b610a7b6040518060800160405280600081526020016000815260200160008152602001600081525090565b815260200190600190039081610a505790505b5090506000855167ffffffffffffffff811115610aad57610aad611fa2565b604051908082528060200260200182016040528015610af257816020015b6040805180820190915260008082526020820152815260200190600190039081610acb5790505b5090506000865167ffffffffffffffff811115610b1157610b11611fa2565b604051908082528060200260200182016040528015610b6657816020015b610b5360405180606001604052806000815260200160008152602001600081525090565b815260200190600190039081610b2f5790505b50905060005b8751811015610cb2576000888281518110610b8957610b8961272a565b6020026020010151905060026000828152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050858381518110610beb57610beb61272a565b60200260200101819052506004600082815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050848381518110610c3a57610c3a61272a565b6020026020010181905250600360008281526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050838381518110610c9357610c9361272a565b6020026020010181905250508080610caa90612756565b915050610b6c565b509196909550909350915050565b60008082600003610cd657506000905085610d67565b82670de0b6b3a76400006402540be400610cf1600288612785565b610cfb9089612799565b610d0591906127b1565b610d0f9190612785565b610d199190612785565b9150600060646402540be400610d2f8a866127b1565b610d399190612785565b610d439190612785565b905086610d5957610d5481896127d0565b610d63565b610d638189612799565b9150505b9550959350505050565b6000546001600160a01b03163314610dba5760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b8051825114610dfa5760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8251811015610e5457610e42838281518110610e1b57610e1b61272a565b6020026020010151838381518110610e3557610e3561272a565b6020026020010151610f69565b80610e4c81612756565b915050610dfd565b505050565b6000546001600160a01b03163314610ea25760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b81518351148015610eb4575080518351145b610eef5760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8351811015610f6357610f51848281518110610f1057610f1061272a565b6020026020010151848381518110610f2a57610f2a61272a565b6020026020010151848481518110610f4457610f4461272a565b6020026020010151611ac2565b80610f5b81612756565b915050610ef2565b50505050565b6000546001600160a01b03163314610fb25760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b610fbb82611e88565b610fc482611e25565b6000828152600260208181526040928390208451815590840151600182015582840151918101919091556060830151600390910155517f901e66575b0aecca6e394d488bfe990ff28995f6da67ef2fe1d6c900b6573a039061102990849084906127e7565b60405180910390a15050565b6001600160a01b0384166000908152600560209081526040808320868452825280832085845282528083208151606081018352815481526001820154938101939093526002015460ff1615159082018190526110955760009150506110ae565b80516110aa906110a4876116ac565b85611561565b9150505b949350505050565b60006110d9858585856110cb8d8d8d8b611035565b6105db8e8e8e8d8d8d611b6b565b98975050505050505050565b6000808486848660646110f9605a856127b1565b6111039190612785565b61110d919061281c565b611117919061281c565b611121908b61285b565b61112b91906128e2565b61113591906128e2565b905060008761114d57611148828a612910565b611157565b611157828a61281c565b90506000811361116857600061116a565b805b925050505b9695505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662b127836040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fc919061270d565b6001600160a01b0316336001600160a01b03161461124d5760405162461bcd60e51b815260206004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b6044820152606401610923565b61125688611e25565b60006112648a8a8a89611035565b905060006112768b8b8b8b8b8b611b6b565b905061128587868484886117fb565b604080518c81528a15156020820152908101899052606081018890526080810187905260a0810184905260c081018390529093507f3a484d35e7358ad950e494938ebbac2c1319c2b76d162112f51d66752244dde39060e00160405180910390a1505098975050505050505050565b6000546001600160a01b0316331461133d5760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b805182511461137d5760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8251811015610e54576113c583828151811061139e5761139e61272a565b60200260200101518383815181106113b8576113b861272a565b602002602001015161171f565b806113cf81612756565b915050611380565b6000546001600160a01b031633146114205760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b60018190556040518181527f5ba729b89796f40d260b117b8654dc301b1d9f7ec17a1e378ae31e4c70b6d2c0906020015b60405180910390a150565b60008061155486857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166328daca2189896114a05760016114a3565b60005b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925260ff166024820152604401602060405180830381865afa1580156114ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115239190612950565b86886115405760008a815260026020526040902060010154610cc0565b60008a815260026020526040902054610cc0565b9097909650945050505050565b6000670de0b6b3a76400008261157786866127d0565b61158191906127b1565b6110ae9190612785565b6000546001600160a01b031633146115d45760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b80518251146116145760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8251811015610e545761165c8382815181106116355761163561272a565b602002602001015183838151811061164f5761164f61272a565b602002602001015161189f565b8061166681612756565b915050611617565b6000670de0b6b3a76400008284611685888861281c565b61168f919061285b565b611699919061285b565b6116a391906128e2565b95945050505050565b60008181526004602090815260408083206002928390529083209091015460018201546064916402540be400916116e390436127d0565b6116ed91906127b1565b6116ff90670de0b6b3a76400006127b1565b6117099190612785565b6117139190612785565b815461084e9190612799565b6000546001600160a01b031633146117685760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b63017d78408111156117a75760405162461bcd60e51b81526020600482015260086024820152670a89e9ebe90928e960c31b6044820152606401610923565b6117b082611e88565b60008281526002602081815260409283902090910183905581518481529081018390527f048ce436ab4f2632f2aac62af26be3383ebdf5efc9a63f0bbeb6d6c9762d70899101611029565b600080838560646402540be4006118128a8c61285b565b61181c91906128e2565b61182691906128e2565b611830908a612910565b61183a919061281c565b611844919061281c565b90506064611853605a826127d0565b61185d908961285b565b61186791906128e2565b81136118775760009150506116a3565b611881838261281c565b905060008113611892576000611894565b805b979650505050505050565b6000546001600160a01b031633146118e85760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b629896808111156119265760405162461bcd60e51b81526020600482015260086024820152670a89e9ebe90928e960c31b6044820152606401610923565b61192f82611e25565b60008281526002602090815260409182902060030183905581518481529081018390527fbe762e88e6ff669d272010f163dfb3c6d389b16831c73e10f95860b2e4f152989101611029565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fc919061270d565b6001600160a01b0316336001600160a01b031614611a5c5760405162461bcd60e51b815260206004820152600860248201527f474f565f4f4e4c590000000000000000000000000000000000000000000000006044820152606401610923565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2c1c11af44aa5608f1dca38c00275c30ea091e02417d36e70e9a1538689c433d90602001611451565b6000546001600160a01b03163314611b0b5760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b6000838152600260209081526040918290208481556001810184905582518681529182018590529181018390527f1daeaff85d4d7cfda495ef83720a04b81df77e38711ca570061e16efa6ffa2759060600160405180910390a150505050565b6001600160a01b0386166000908152600560209081526040808320888452825280832087845282528083208151606081018352815481526001820154938101939093526002015460ff161515908201819052611bcb57600091505061116f565b600080611bd789611c05565b91509150611bf7836020015188611bee5782611bf0565b835b888861166e565b9a9950505050505050505050565b6000818152600360205260408082208054600182015492516328daca2160e01b815260048101869052602481018590529093907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906328daca2190604401602060405180830381865afa158015611c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cad9190612950565b6040516328daca2160e01b815260048101879052600160248201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906328daca2190604401602060405180830381865afa158015611d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d439190612950565b9050600060646402540be400600260008a815260200190815260200160002060030154866002015443611d7691906127d0565b611d80868861281c565b611d8a919061285b565b611d94919061285b565b611d9e91906128e2565b611da891906128e2565b90506000831315611ddd5782611dc682670de0b6b3a764000061285b565b611dd091906128e2565b611dda9087612910565b95505b6000821315611e1c5781611df982670de0b6b3a764000061285b565b611e059060001961285b565b611e0f91906128e2565b611e199086612910565b94505b50505050915091565b6000818152600360205260409020611e3c82611c05565b600183018190558183554360028401556040805185815260208101939093528201527fc08ace100a8e3b7186ad5fcb68a0b9e7e0bd60aa466cdba34932fa0513353c6490606001611029565b6000818152600460205260409020611e9f826116ac565b8082554360018301556040805184815260208101929092527f66ae41afb9d1762b0b5f1a431a9e5c767128a1bec9ecb20e1ef9dba7dc3663d69101611029565b6001600160a01b0381168114611ef457600080fd5b50565b600080600060608486031215611f0c57600080fd5b8335611f1781611edf565b95602085013595506040909401359392505050565b600060208284031215611f3e57600080fd5b5035919050565b80358015158114611f5557600080fd5b919050565b60008060008060808587031215611f7057600080fd5b8435611f7b81611edf565b93506020850135925060408501359150611f9760608601611f45565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611fe157611fe1611fa2565b604052919050565b600067ffffffffffffffff82111561200357612003611fa2565b5060051b60200190565b600082601f83011261201e57600080fd5b8135602061203361202e83611fe9565b611fb8565b82815260059290921b8401810191818101908684111561205257600080fd5b8286015b8481101561206d5780358352918301918301612056565b509695505050505050565b60006020828403121561208a57600080fd5b813567ffffffffffffffff8111156120a157600080fd5b6110ae8482850161200d565b600081518084526020808501945080840160005b838110156120f357815180518852838101518489015260409081015190880152606090960195908201906001016120c1565b509495945050505050565b60608082528451908201819052600090608090818401906020808901855b8381101561216057612150858351805182526020810151602083015260408101516040830152606081015160608301525050565b938501939082019060010161211c565b5050858303818701528751808452928101935087810192915060005b828110156121a357835180518652820151828601526040909401939281019260010161217c565b5050505082810360408401526110aa81856120ad565b600080600080600060a086880312156121d157600080fd5b853594506121e160208701611f45565b94979496505050506040830135926060810135926080909101359150565b60006080828403121561221157600080fd5b6040516080810181811067ffffffffffffffff8211171561223457612234611fa2565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b6000806040838503121561227857600080fd5b823567ffffffffffffffff8082111561229057600080fd5b61229c8683870161200d565b93506020915081850135818111156122b357600080fd5b85019050601f810186136122c657600080fd5b80356122d461202e82611fe9565b81815260079190911b820183019083810190888311156122f357600080fd5b928401925b8284101561231c5761230a89856121ff565b825284820191506080840193506122f8565b80955050505050509250929050565b60008060006060848603121561234057600080fd5b833567ffffffffffffffff8082111561235857600080fd5b6123648783880161200d565b9450602086013591508082111561237a57600080fd5b6123868783880161200d565b9350604086013591508082111561239c57600080fd5b506123a98682870161200d565b9150509250925092565b60008060a083850312156123c657600080fd5b823591506123d784602085016121ff565b90509250929050565b600080600080608085870312156123f657600080fd5b843561240181611edf565b966020860135965060408601359560600135945092505050565b600080600080600080600060e0888a03121561243657600080fd5b873561244181611edf565b965060208801359550604088013594506060880135935061246460808901611f45565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060c0878903121561249957600080fd5b863595506124a960208801611f45565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080600080600080610100898b0312156124eb57600080fd5b88356124f681611edf565b9750602089013596506040890135955061251260608a01611f45565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b6000806040838503121561254d57600080fd5b823567ffffffffffffffff8082111561256557600080fd5b6125718683870161200d565b9350602085013591508082111561258757600080fd5b506125948582860161200d565b9150509250929050565b600080600080608085870312156125b457600080fd5b84359350602085013592506125cb60408601611f45565b9396929550929360600135925050565b6000806000606084860312156125f057600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561261d57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561264c57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561267357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156126a857600080fd5b813561084e81611edf565b60008060008060008060c087890312156126cc57600080fd5b86356126d781611edf565b955060208701359450604087013593506126f360608801611f45565b92506080870135915060a087013590509295509295509295565b60006020828403121561271f57600080fd5b815161084e81611edf565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161276857612768612740565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826127945761279461276f565b500490565b600082198211156127ac576127ac612740565b500190565b60008160001904831182151516156127cb576127cb612740565b500290565b6000828210156127e2576127e2612740565b500390565b82815260a0810161084e6020830184805182526020810151602083015260408101516040830152606081015160608301525050565b60008083128015600160ff1b85018412161561283a5761283a612740565b836001600160ff1b0301831381161561285557612855612740565b50500390565b60006001600160ff1b0360008413600084138583048511828216161561288357612883612740565b600160ff1b60008712828116878305891216156128a2576128a2612740565b600087129250878205871284841616156128be576128be612740565b878505871281841616156128d4576128d4612740565b505050929093029392505050565b6000826128f1576128f161276f565b600160ff1b82146000198414161561290b5761290b612740565b500590565b6000808212826001600160ff1b030384138115161561293157612931612740565b600160ff1b839003841281161561294a5761294a612740565b50500190565b60006020828403121561296257600080fd5b505191905056fea26469706673582212203fb4625f5469416330978a61006316d73e75b680afbe7abf59b10343e922c04764736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102de5760003560e01c80636f6af69711610186578063bf1db1f6116100e3578063ee52e5fe11610097578063f6c50efe11610071578063f6c50efe146107b4578063fcc37c87146107c7578063fe3cfd8c146107da57600080fd5b8063ee52e5fe1461075e578063f0270f331461077e578063f6960654146107a157600080fd5b8063c2cc670d116100c8578063c2cc670d14610718578063cfc23e9e1461072b578063d0ebdbe71461074b57600080fd5b8063bf1db1f6146106de578063c22ff7bf1461070557600080fd5b80639cf9c9391161013a578063a77e8e2a1161011f578063a77e8e2a146106a5578063ab21a05c146106b8578063b74243ba146106cb57600080fd5b80639cf9c93914610648578063a49e87881461069257600080fd5b80637ea95f321161016b5780637ea95f321461061957806380f6cfc21461062c5780639c625e1e1461063557600080fd5b80636f6af697146105f35780637884274f1461060657600080fd5b8063338139ad1161023f578063481c6a75116101f35780636bc84d59116101cd5780636bc84d59146105ba5780636bcbe860146105cd5780636ceaca67146105e057600080fd5b8063481c6a751461051c57806358f796bc146105475780635ed5804e1461055a57600080fd5b80633df7fd72116102245780633df7fd721461046e57806342dee1ad1461048157806346dbab36146104d857600080fd5b8063338139ad14610437578063351533e71461045b57600080fd5b806312fdefd9116102965780632b180a7d1161027b5780632b180a7d146103de5780632d15e4e01461040157806331556d2f1461042457600080fd5b806312fdefd91461039357806321adc48f146103bb57600080fd5b80630e6bc39a116102c75780630e6bc39a1461033c5780630ea777701461035157806312b6566e1461037357600080fd5b80630dd34f57146102e35780630e0052fc1461030b575b600080fd5b6102f66102f1366004611ef7565b61081b565b60405190151581526020015b60405180910390f35b61032e610319366004611f2c565b60009081526004602052604090206001015490565b604051908152602001610302565b61034f61034a366004611f5a565b610855565b005b61036461035f366004612078565b610a11565b604051610302939291906120fe565b61032e610381366004611f2c565b60009081526004602052604090205490565b6103a66103a13660046121b9565b610cc0565b60408051928352602083019190915201610302565b61032e6103c9366004611f2c565b60009081526003602052604090206001015490565b61032e6103ec366004611f2c565b60009081526002602052604090206001015490565b61032e61040f366004611f2c565b60009081526003602052604090206002015490565b61034f610432366004612265565b610d71565b61032e610445366004611f2c565b6000908152600260208190526040909120015490565b61034f61046936600461232b565b610e59565b61034f61047c3660046123b3565b610f69565b6104b861048f366004611f2c565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b604080519485526020850193909352918301526060820152608001610302565b61032e6104e6366004611ef7565b6001600160a01b038316600090815260056020908152604080832085845282528083208484529091529020600101549392505050565b60005461052f906001600160a01b031681565b6040516001600160a01b039091168152602001610302565b61032e6105553660046123e0565b611035565b61059d610568366004611ef7565b600560209081526000938452604080852082529284528284209052825290208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610302565b61032e6105c836600461241b565b6110b6565b61032e6105db366004612480565b6110e5565b61032e6105ee3660046124ce565b611179565b61034f61060136600461253a565b6112f4565b61034f610614366004611f2c565b6113d7565b6103a661062736600461259e565b61145c565b61032e60015481565b61032e6106433660046125db565b611561565b610677610656366004611f2c565b60036020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610302565b61034f6106a036600461253a565b61158b565b61032e6106b3366004612607565b61166e565b61032e6106c6366004611f2c565b6116ac565b61034f6106d9366004612639565b61171f565b6103a66106ec366004611f2c565b6004602052600090815260409020805460019091015482565b61032e61071336600461265b565b6117fb565b61034f610726366004612639565b61189f565b61032e610739366004611f2c565b60009081526002602052604090205490565b61034f610759366004612696565b61197a565b61032e61076c366004611f2c565b60009081526003602052604090205490565b61032e61078c366004611f2c565b60009081526002602052604090206003015490565b61034f6107af3660046125db565b611ac2565b61032e6107c23660046126b3565b611b6b565b6103a66107d5366004611f2c565b611c05565b61032e6107e8366004611ef7565b6001600160a01b038316600090815260056020908152604080832085845282528083208484529091529020549392505050565b6001600160a01b0383166000908152600560209081526040808320858452825280832084845290915290206002015460ff165b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662b127836040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d6919061270d565b6001600160a01b0316336001600160a01b03161461092c5760405162461bcd60e51b815260206004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b60448201526064015b60405180910390fd5b61093583611e25565b6001600160a01b038416600090815260056020908152604080832086845282528083208584529091529020610969846116ac565b81558161098757600084815260036020526040902060010154610997565b6000848152600360205260409020545b600182810182905560028301805460ff191690911790558154604080516001600160a01b038916815260208101889052908101869052606081019190915260808101919091527f4e58eed9e01cebfd4256725d6d1ce9fa694faa7ac5312e75af02360f453d048e9060a00160405180910390a15050505050565b60608060606000845167ffffffffffffffff811115610a3257610a32611fa2565b604051908082528060200260200182016040528015610a8e57816020015b610a7b6040518060800160405280600081526020016000815260200160008152602001600081525090565b815260200190600190039081610a505790505b5090506000855167ffffffffffffffff811115610aad57610aad611fa2565b604051908082528060200260200182016040528015610af257816020015b6040805180820190915260008082526020820152815260200190600190039081610acb5790505b5090506000865167ffffffffffffffff811115610b1157610b11611fa2565b604051908082528060200260200182016040528015610b6657816020015b610b5360405180606001604052806000815260200160008152602001600081525090565b815260200190600190039081610b2f5790505b50905060005b8751811015610cb2576000888281518110610b8957610b8961272a565b6020026020010151905060026000828152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050858381518110610beb57610beb61272a565b60200260200101819052506004600082815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050848381518110610c3a57610c3a61272a565b6020026020010181905250600360008281526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050838381518110610c9357610c9361272a565b6020026020010181905250508080610caa90612756565b915050610b6c565b509196909550909350915050565b60008082600003610cd657506000905085610d67565b82670de0b6b3a76400006402540be400610cf1600288612785565b610cfb9089612799565b610d0591906127b1565b610d0f9190612785565b610d199190612785565b9150600060646402540be400610d2f8a866127b1565b610d399190612785565b610d439190612785565b905086610d5957610d5481896127d0565b610d63565b610d638189612799565b9150505b9550959350505050565b6000546001600160a01b03163314610dba5760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b8051825114610dfa5760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8251811015610e5457610e42838281518110610e1b57610e1b61272a565b6020026020010151838381518110610e3557610e3561272a565b6020026020010151610f69565b80610e4c81612756565b915050610dfd565b505050565b6000546001600160a01b03163314610ea25760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b81518351148015610eb4575080518351145b610eef5760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8351811015610f6357610f51848281518110610f1057610f1061272a565b6020026020010151848381518110610f2a57610f2a61272a565b6020026020010151848481518110610f4457610f4461272a565b6020026020010151611ac2565b80610f5b81612756565b915050610ef2565b50505050565b6000546001600160a01b03163314610fb25760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b610fbb82611e88565b610fc482611e25565b6000828152600260208181526040928390208451815590840151600182015582840151918101919091556060830151600390910155517f901e66575b0aecca6e394d488bfe990ff28995f6da67ef2fe1d6c900b6573a039061102990849084906127e7565b60405180910390a15050565b6001600160a01b0384166000908152600560209081526040808320868452825280832085845282528083208151606081018352815481526001820154938101939093526002015460ff1615159082018190526110955760009150506110ae565b80516110aa906110a4876116ac565b85611561565b9150505b949350505050565b60006110d9858585856110cb8d8d8d8b611035565b6105db8e8e8e8d8d8d611b6b565b98975050505050505050565b6000808486848660646110f9605a856127b1565b6111039190612785565b61110d919061281c565b611117919061281c565b611121908b61285b565b61112b91906128e2565b61113591906128e2565b905060008761114d57611148828a612910565b611157565b611157828a61281c565b90506000811361116857600061116a565b805b925050505b9695505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662b127836040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fc919061270d565b6001600160a01b0316336001600160a01b03161461124d5760405162461bcd60e51b815260206004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b6044820152606401610923565b61125688611e25565b60006112648a8a8a89611035565b905060006112768b8b8b8b8b8b611b6b565b905061128587868484886117fb565b604080518c81528a15156020820152908101899052606081018890526080810187905260a0810184905260c081018390529093507f3a484d35e7358ad950e494938ebbac2c1319c2b76d162112f51d66752244dde39060e00160405180910390a1505098975050505050505050565b6000546001600160a01b0316331461133d5760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b805182511461137d5760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8251811015610e54576113c583828151811061139e5761139e61272a565b60200260200101518383815181106113b8576113b861272a565b602002602001015161171f565b806113cf81612756565b915050611380565b6000546001600160a01b031633146114205760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b60018190556040518181527f5ba729b89796f40d260b117b8654dc301b1d9f7ec17a1e378ae31e4c70b6d2c0906020015b60405180910390a150565b60008061155486857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166328daca2189896114a05760016114a3565b60005b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925260ff166024820152604401602060405180830381865afa1580156114ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115239190612950565b86886115405760008a815260026020526040902060010154610cc0565b60008a815260026020526040902054610cc0565b9097909650945050505050565b6000670de0b6b3a76400008261157786866127d0565b61158191906127b1565b6110ae9190612785565b6000546001600160a01b031633146115d45760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b80518251146116145760405162461bcd60e51b815260206004820152600c60248201526b0aea49e9c8ebe988a9c8ea8960a31b6044820152606401610923565b60005b8251811015610e545761165c8382815181106116355761163561272a565b602002602001015183838151811061164f5761164f61272a565b602002602001015161189f565b8061166681612756565b915050611617565b6000670de0b6b3a76400008284611685888861281c565b61168f919061285b565b611699919061285b565b6116a391906128e2565b95945050505050565b60008181526004602090815260408083206002928390529083209091015460018201546064916402540be400916116e390436127d0565b6116ed91906127b1565b6116ff90670de0b6b3a76400006127b1565b6117099190612785565b6117139190612785565b815461084e9190612799565b6000546001600160a01b031633146117685760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b63017d78408111156117a75760405162461bcd60e51b81526020600482015260086024820152670a89e9ebe90928e960c31b6044820152606401610923565b6117b082611e88565b60008281526002602081815260409283902090910183905581518481529081018390527f048ce436ab4f2632f2aac62af26be3383ebdf5efc9a63f0bbeb6d6c9762d70899101611029565b600080838560646402540be4006118128a8c61285b565b61181c91906128e2565b61182691906128e2565b611830908a612910565b61183a919061281c565b611844919061281c565b90506064611853605a826127d0565b61185d908961285b565b61186791906128e2565b81136118775760009150506116a3565b611881838261281c565b905060008113611892576000611894565b805b979650505050505050565b6000546001600160a01b031633146118e85760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b629896808111156119265760405162461bcd60e51b81526020600482015260086024820152670a89e9ebe90928e960c31b6044820152606401610923565b61192f82611e25565b60008281526002602090815260409182902060030183905581518481529081018390527fbe762e88e6ff669d272010f163dfb3c6d389b16831c73e10f95860b2e4f152989101611029565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fc919061270d565b6001600160a01b0316336001600160a01b031614611a5c5760405162461bcd60e51b815260206004820152600860248201527f474f565f4f4e4c590000000000000000000000000000000000000000000000006044820152606401610923565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2c1c11af44aa5608f1dca38c00275c30ea091e02417d36e70e9a1538689c433d90602001611451565b6000546001600160a01b03163314611b0b5760405162461bcd60e51b815260206004820152600c60248201526b4d414e414745525f4f4e4c5960a01b6044820152606401610923565b6000838152600260209081526040918290208481556001810184905582518681529182018590529181018390527f1daeaff85d4d7cfda495ef83720a04b81df77e38711ca570061e16efa6ffa2759060600160405180910390a150505050565b6001600160a01b0386166000908152600560209081526040808320888452825280832087845282528083208151606081018352815481526001820154938101939093526002015460ff161515908201819052611bcb57600091505061116f565b600080611bd789611c05565b91509150611bf7836020015188611bee5782611bf0565b835b888861166e565b9a9950505050505050505050565b6000818152600360205260408082208054600182015492516328daca2160e01b815260048101869052602481018590529093907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906328daca2190604401602060405180830381865afa158015611c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cad9190612950565b6040516328daca2160e01b815260048101879052600160248201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906328daca2190604401602060405180830381865afa158015611d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d439190612950565b9050600060646402540be400600260008a815260200190815260200160002060030154866002015443611d7691906127d0565b611d80868861281c565b611d8a919061285b565b611d94919061285b565b611d9e91906128e2565b611da891906128e2565b90506000831315611ddd5782611dc682670de0b6b3a764000061285b565b611dd091906128e2565b611dda9087612910565b95505b6000821315611e1c5781611df982670de0b6b3a764000061285b565b611e059060001961285b565b611e0f91906128e2565b611e199086612910565b94505b50505050915091565b6000818152600360205260409020611e3c82611c05565b600183018190558183554360028401556040805185815260208101939093528201527fc08ace100a8e3b7186ad5fcb68a0b9e7e0bd60aa466cdba34932fa0513353c6490606001611029565b6000818152600460205260409020611e9f826116ac565b8082554360018301556040805184815260208101929092527f66ae41afb9d1762b0b5f1a431a9e5c767128a1bec9ecb20e1ef9dba7dc3663d69101611029565b6001600160a01b0381168114611ef457600080fd5b50565b600080600060608486031215611f0c57600080fd5b8335611f1781611edf565b95602085013595506040909401359392505050565b600060208284031215611f3e57600080fd5b5035919050565b80358015158114611f5557600080fd5b919050565b60008060008060808587031215611f7057600080fd5b8435611f7b81611edf565b93506020850135925060408501359150611f9760608601611f45565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611fe157611fe1611fa2565b604052919050565b600067ffffffffffffffff82111561200357612003611fa2565b5060051b60200190565b600082601f83011261201e57600080fd5b8135602061203361202e83611fe9565b611fb8565b82815260059290921b8401810191818101908684111561205257600080fd5b8286015b8481101561206d5780358352918301918301612056565b509695505050505050565b60006020828403121561208a57600080fd5b813567ffffffffffffffff8111156120a157600080fd5b6110ae8482850161200d565b600081518084526020808501945080840160005b838110156120f357815180518852838101518489015260409081015190880152606090960195908201906001016120c1565b509495945050505050565b60608082528451908201819052600090608090818401906020808901855b8381101561216057612150858351805182526020810151602083015260408101516040830152606081015160608301525050565b938501939082019060010161211c565b5050858303818701528751808452928101935087810192915060005b828110156121a357835180518652820151828601526040909401939281019260010161217c565b5050505082810360408401526110aa81856120ad565b600080600080600060a086880312156121d157600080fd5b853594506121e160208701611f45565b94979496505050506040830135926060810135926080909101359150565b60006080828403121561221157600080fd5b6040516080810181811067ffffffffffffffff8211171561223457612234611fa2565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b6000806040838503121561227857600080fd5b823567ffffffffffffffff8082111561229057600080fd5b61229c8683870161200d565b93506020915081850135818111156122b357600080fd5b85019050601f810186136122c657600080fd5b80356122d461202e82611fe9565b81815260079190911b820183019083810190888311156122f357600080fd5b928401925b8284101561231c5761230a89856121ff565b825284820191506080840193506122f8565b80955050505050509250929050565b60008060006060848603121561234057600080fd5b833567ffffffffffffffff8082111561235857600080fd5b6123648783880161200d565b9450602086013591508082111561237a57600080fd5b6123868783880161200d565b9350604086013591508082111561239c57600080fd5b506123a98682870161200d565b9150509250925092565b60008060a083850312156123c657600080fd5b823591506123d784602085016121ff565b90509250929050565b600080600080608085870312156123f657600080fd5b843561240181611edf565b966020860135965060408601359560600135945092505050565b600080600080600080600060e0888a03121561243657600080fd5b873561244181611edf565b965060208801359550604088013594506060880135935061246460808901611f45565b925060a0880135915060c0880135905092959891949750929550565b60008060008060008060c0878903121561249957600080fd5b863595506124a960208801611f45565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080600080600080610100898b0312156124eb57600080fd5b88356124f681611edf565b9750602089013596506040890135955061251260608a01611f45565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b6000806040838503121561254d57600080fd5b823567ffffffffffffffff8082111561256557600080fd5b6125718683870161200d565b9350602085013591508082111561258757600080fd5b506125948582860161200d565b9150509250929050565b600080600080608085870312156125b457600080fd5b84359350602085013592506125cb60408601611f45565b9396929550929360600135925050565b6000806000606084860312156125f057600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561261d57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561264c57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561267357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156126a857600080fd5b813561084e81611edf565b60008060008060008060c087890312156126cc57600080fd5b86356126d781611edf565b955060208701359450604087013593506126f360608801611f45565b92506080870135915060a087013590509295509295509295565b60006020828403121561271f57600080fd5b815161084e81611edf565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161276857612768612740565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826127945761279461276f565b500490565b600082198211156127ac576127ac612740565b500190565b60008160001904831182151516156127cb576127cb612740565b500290565b6000828210156127e2576127e2612740565b500390565b82815260a0810161084e6020830184805182526020810151602083015260408101516040830152606081015160608301525050565b60008083128015600160ff1b85018412161561283a5761283a612740565b836001600160ff1b0301831381161561285557612855612740565b50500390565b60006001600160ff1b0360008413600084138583048511828216161561288357612883612740565b600160ff1b60008712828116878305891216156128a2576128a2612740565b600087129250878205871284841616156128be576128be612740565b878505871281841616156128d4576128d4612740565b505050929093029392505050565b6000826128f1576128f161276f565b600160ff1b82146000198414161561290b5761290b612740565b500590565b6000808212826001600160ff1b030384138115161561293157612931612740565b600160ff1b839003841281161561294a5761294a612740565b50500190565b60006020828403121561296257600080fd5b505191905056fea26469706673582212203fb4625f5469416330978a61006316d73e75b680afbe7abf59b10343e922c04764736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3015,
        "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
        "label": "manager",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3026,
        "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
        "label": "maxNegativePnlOnOpenP",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3040,
        "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
        "label": "pairParams",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(PairParams)3035_storage)"
      },
      {
        "astId": 3052,
        "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
        "label": "pairFundingFees",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(PairFundingFees)3047_storage)"
      },
      {
        "astId": 3062,
        "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
        "label": "pairRolloverFees",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(PairRolloverFees)3057_storage)"
      },
      {
        "astId": 3078,
        "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
        "label": "tradeInitialAccFees",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)3069_storage)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)3069_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct GNSPairInfosV6_1.TradeInitialAccFees)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)3069_storage))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)3069_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct GNSPairInfosV6_1.TradeInitialAccFees))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(TradeInitialAccFees)3069_storage)"
      },
      "t_mapping(t_uint256,t_struct(PairFundingFees)3047_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairInfosV6_1.PairFundingFees)",
        "numberOfBytes": "32",
        "value": "t_struct(PairFundingFees)3047_storage"
      },
      "t_mapping(t_uint256,t_struct(PairParams)3035_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairInfosV6_1.PairParams)",
        "numberOfBytes": "32",
        "value": "t_struct(PairParams)3035_storage"
      },
      "t_mapping(t_uint256,t_struct(PairRolloverFees)3057_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairInfosV6_1.PairRolloverFees)",
        "numberOfBytes": "32",
        "value": "t_struct(PairRolloverFees)3057_storage"
      },
      "t_mapping(t_uint256,t_struct(TradeInitialAccFees)3069_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairInfosV6_1.TradeInitialAccFees)",
        "numberOfBytes": "32",
        "value": "t_struct(TradeInitialAccFees)3069_storage"
      },
      "t_struct(PairFundingFees)3047_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairInfosV6_1.PairFundingFees",
        "members": [
          {
            "astId": 3042,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "accPerOiLong",
            "offset": 0,
            "slot": "0",
            "type": "t_int256"
          },
          {
            "astId": 3044,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "accPerOiShort",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 3046,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "lastUpdateBlock",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PairParams)3035_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairInfosV6_1.PairParams",
        "members": [
          {
            "astId": 3028,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "onePercentDepthAbove",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3030,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "onePercentDepthBelow",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3032,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "rolloverFeePerBlockP",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3034,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "fundingFeePerBlockP",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(PairRolloverFees)3057_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairInfosV6_1.PairRolloverFees",
        "members": [
          {
            "astId": 3054,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "accPerCollateral",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3056,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "lastUpdateBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(TradeInitialAccFees)3069_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairInfosV6_1.TradeInitialAccFees",
        "members": [
          {
            "astId": 3064,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "rollover",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3066,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "funding",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 3068,
            "contract": "contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1",
            "label": "openedAfterUpdate",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}

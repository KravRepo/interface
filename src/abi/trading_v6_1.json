{
  "address": "0x5c910F30F4f3D8E647BCE0E562619426629a14cB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "_storageT",
          "type": "address"
        },
        {
          "internalType": "contract GNSPairInfosInterfaceV6",
          "name": "_pairInfos",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "AddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pairIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialPosToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "positionSizeDai",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "openPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "buy",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "leverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sl",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorageInterfaceV5.Trade",
              "name": "trade",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "block",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wantedPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slippageP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spreadReductionP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct StorageInterfaceV5.PendingMarketOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "ChainlinkCallbackTimeout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "CouldNotCloseTrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        }
      ],
      "name": "Done",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "open",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "MarketOrderInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "NftOrderInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "NftOrderSameBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NumberUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "OpenLimitCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "OpenLimitPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSl",
          "type": "uint256"
        }
      ],
      "name": "OpenLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSl",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "SlUpdateInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSl",
          "type": "uint256"
        }
      ],
      "name": "SlUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTp",
          "type": "uint256"
        }
      ],
      "name": "TpUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "cancelOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "closeTradeMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_order",
          "type": "uint256"
        }
      ],
      "name": "closeTradeMarketTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "done",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum StorageInterfaceV5.LimitOrder",
          "name": "_orderType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nftId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nftType",
          "type": "uint256"
        }
      ],
      "name": "executeNftOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isDone",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitOrdersTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketOrdersTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPosDai",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialPosToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionSizeDai",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "buy",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "leverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sl",
              "type": "uint256"
            }
          ],
          "internalType": "struct StorageInterfaceV5.Trade",
          "name": "t",
          "type": "tuple"
        },
        {
          "internalType": "enum NftRewardsInterfaceV6.OpenLimitOrderType",
          "name": "_type",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_spreadReductionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slippageP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_referral",
          "type": "address"
        }
      ],
      "name": "openTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_order",
          "type": "uint256"
        }
      ],
      "name": "openTradeMarketTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocks",
          "type": "uint256"
        }
      ],
      "name": "setLimitOrdersTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketOrdersTimeout",
          "type": "uint256"
        }
      ],
      "name": "setMarketOrdersTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setMaxPosDai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sl",
          "type": "uint256"
        }
      ],
      "name": "updateOpenLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newSl",
          "type": "uint256"
        }
      ],
      "name": "updateSl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTp",
          "type": "uint256"
        }
      ],
      "name": "updateTp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9e831ef62ca9dd8505018d69e6cd10a5fccc8eebf872257e0abfd88316aea009",
  "receipt": {
    "to": null,
    "from": "0x284f1b4a9C4B9495F79de62a55337e0a07cCF3fF",
    "contractAddress": "0x088821A8298908B6E5c9879b8963B38Bcf67e1a9",
    "transactionIndex": 13,
    "gasUsed": "4416583",
    "logsBloom": "0x
    "blockHash": "0x1db14dae42e451e8eb09720cc4f8a0478c88fdb004667aca44ccf556f72de3ab",
    "transactionHash": "0x9e831ef62ca9dd8505018d69e6cd10a5fccc8eebf872257e0abfd88316aea009",
    "logs": [],
    "blockNumber": 30988674,
    "cumulativeGasUsed": "5151814",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x896875b453161e89660F89e6D9dDe935c793aDe8", "0xDBD19864B0AaD341170153c6a3B2D065a2870760"],
  "numDeployments": 1,
  "solcInputHash": "d9e911b7c48c581ed924bf1d179fe035",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"_storageT\",\"type\":\"address\"},{\"internalType\":\"contract GNSPairInfosInterfaceV6\",\"name\":\"_pairInfos\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterfaceV5.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StorageInterfaceV5.PendingMarketOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"ChainlinkCallbackTimeout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"CouldNotCloseTrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"}],\"name\":\"Done\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"MarketOrderInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"NftOrderInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"NftOrderSameBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"OpenLimitCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"OpenLimitPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSl\",\"type\":\"uint256\"}],\"name\":\"OpenLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"SlUpdateInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSl\",\"type\":\"uint256\"}],\"name\":\"SlUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTp\",\"type\":\"uint256\"}],\"name\":\"TpUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"cancelOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"closeTradeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"}],\"name\":\"closeTradeMarketTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"done\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum StorageInterfaceV5.LimitOrder\",\"name\":\"_orderType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nftType\",\"type\":\"uint256\"}],\"name\":\"executeNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDone\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitOrdersTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOrdersTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPosDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct StorageInterfaceV5.Trade\",\"name\":\"t\",\"type\":\"tuple\"},{\"internalType\":\"enum NftRewardsInterfaceV6.OpenLimitOrderType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_spreadReductionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slippageP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"}],\"name\":\"openTradeMarketTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"setLimitOrdersTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketOrdersTimeout\",\"type\":\"uint256\"}],\"name\":\"setMarketOrdersTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxPosDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sl\",\"type\":\"uint256\"}],\"name\":\"updateOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newSl\",\"type\":\"uint256\"}],\"name\":\"updateSl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTp\",\"type\":\"uint256\"}],\"name\":\"updateTp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeNftOrder(uint8,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"\\u6267\\u884c\\u8ba2\\u5355\\u7684\\u51fd\\u6570\\uff0c\\u673a\\u5668\\u4eba\\u6267\\u884c\\u7684\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GNSTradingV6_1.sol\":\"GNSTradingV6_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/GNSTradingV6_1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport './interfaces/StorageInterfaceV5.sol';\\nimport './interfaces/GNSPairInfosInterfaceV6.sol';\\npragma solidity 0.8.14;\\n\\ncontract GNSTradingV6_1{\\n\\n    // Contracts (constant)\\n    StorageInterfaceV5 immutable storageT;\\n    GNSPairInfosInterfaceV6 immutable pairInfos;\\n\\n    // Params (constant)\\n    uint constant PRECISION = 1e10;\\n    uint constant MAX_SL_P = 75;            // -75% PNL\\n\\n    // Params (adjustable)\\n    uint public maxPosDai = 75000 * 1e18;   // 1e18 ($)\\n\\n    uint public limitOrdersTimelock = 30;   // block\\n    uint public marketOrdersTimeout = 30;   // block\\n\\n    // State\\n    bool public isPaused;   // Prevent opening new trades\\n    bool public isDone;     // Prevent any interaction with the contract\\n\\n    // Events\\n    event Done(bool done);\\n    event Paused(bool paused);\\n\\n    event NumberUpdated(string name, uint value);\\n    event AddressUpdated(string name, address a);\\n\\n    event MarketOrderInitiated(address trader, uint pairIndex, bool open, uint orderId);\\n\\n    event NftOrderInitiated(address nftHolder, address trader, uint pairIndex, uint orderId);\\n    event NftOrderSameBlock(address nftHolder, address trader, uint pairIndex);\\n\\n    event OpenLimitPlaced(address trader, uint pairIndex, uint index);\\n    event OpenLimitUpdated(address trader, uint pairIndex, uint index, uint newPrice, uint newTp, uint newSl);\\n    event OpenLimitCanceled(address trader, uint pairIndex, uint index);\\n\\n    event TpUpdated(address trader, uint pairIndex, uint index, uint newTp);\\n    event SlUpdated(address trader, uint pairIndex, uint index, uint newSl);\\n    event SlUpdateInitiated(address trader, uint pairIndex, uint index, uint newSl, uint orderId);\\n\\n    event ChainlinkCallbackTimeout(uint orderId, StorageInterfaceV5.PendingMarketOrder order);\\n    event CouldNotCloseTrade(address trader, uint pairIndex, uint index);\\n\\n    constructor(StorageInterfaceV5 _storageT, GNSPairInfosInterfaceV6 _pairInfos) {\\n        storageT = _storageT;\\n        pairInfos = _pairInfos;\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov(){ require(msg.sender == storageT.gov(), \\\"GOV_ONLY\\\"); _; }\\n    modifier notContract(){ require(tx.origin == msg.sender); _; }\\n    modifier notDone(){ require(!isDone, \\\"DONE\\\"); _; }\\n\\n    // Manage params\\n    function setMaxPosDai(uint _max) external onlyGov{\\n        require(_max > 0, \\\"VALUE_0\\\");\\n        maxPosDai = _max;\\n        emit NumberUpdated(\\\"maxPosDai\\\", _max);\\n    }\\n    function setLimitOrdersTimelock(uint _blocks) external onlyGov{\\n        require(_blocks > 0, \\\"VALUE_0\\\");\\n        limitOrdersTimelock = _blocks;\\n        emit NumberUpdated(\\\"limitOrdersTimelock\\\", _blocks);\\n    }\\n    function setMarketOrdersTimeout(uint _marketOrdersTimeout) external onlyGov{\\n        require(_marketOrdersTimeout > 0, \\\"VALUE_0\\\");\\n        marketOrdersTimeout = _marketOrdersTimeout;\\n        emit NumberUpdated(\\\"marketOrdersTimeout\\\", _marketOrdersTimeout);\\n    }\\n\\n    // Manage state\\n    function pause() external onlyGov{ isPaused = !isPaused; emit Paused(isPaused); }\\n    function done() external onlyGov{ isDone = !isDone; emit Done(isDone); }\\n\\n    // Open new trade (MARKET/LIMIT)\\n    function openTrade(\\n        StorageInterfaceV5.Trade memory t,\\n        NftRewardsInterfaceV6.OpenLimitOrderType _type,\\n        uint _spreadReductionId,\\n        uint _slippageP,            // for market orders\\n        address _referral\\n    ) external notContract notDone{\\n\\n        require(!isPaused, \\\"PAUSED\\\");\\n\\n        AggregatorInterfaceV6 aggregator = storageT.priceAggregator();\\n        PairsStorageInterfaceV6 pairsStored = aggregator.pairsStorage();\\n\\n        uint spreadReductionP = _spreadReductionId > 0 ? storageT.spreadReductionsP(_spreadReductionId-1) : 0;\\n\\n        require(storageT.openTradesCount(msg.sender, t.pairIndex) + storageT.pendingMarketOpenCount(msg.sender, t.pairIndex) \\n            + storageT.openLimitOrdersCount(msg.sender, t.pairIndex) < storageT.maxTradesPerPair(), \\n            \\\"MAX_TRADES_PER_PAIR\\\");\\n\\n        require(storageT.pendingOrderIdsCount(msg.sender) < storageT.maxPendingMarketOrders(), \\n            \\\"MAX_PENDING_ORDERS\\\");\\n\\n        require(t.positionSizeDai <= maxPosDai, \\\"ABOVE_MAX_POS\\\");\\n        require(t.positionSizeDai * t.leverage >= pairsStored.pairMinLevPosDai(t.pairIndex), \\\"BELOW_MIN_POS\\\");\\n\\n        require(t.leverage > 0 && t.leverage >= pairsStored.pairMinLeverage(t.pairIndex) \\n            && t.leverage <= pairsStored.pairMaxLeverage(t.pairIndex), \\n            \\\"LEVERAGE_INCORRECT\\\");\\n\\n        // \\u5173\\u95edNFT\\u529f\\u80fd\\n        // require(_spreadReductionId == 0 || storageT.nfts(_spreadReductionId-1).balanceOf(msg.sender) > 0,\\n        //    \\\"NO_CORRESPONDING_NFT_SPREAD_REDUCTION\\\");\\n\\n        require(t.tp == 0 || (t.buy ? t.tp > t.openPrice : t.tp < t.openPrice), \\\"WRONG_TP\\\");\\n        require(t.sl == 0 || (t.buy ? t.sl < t.openPrice : t.sl > t.openPrice), \\\"WRONG_SL\\\");\\n\\n        // \\u4ef7\\u683c\\u51b2\\u51fb \\u6682\\u65f6\\u53bb\\u6389\\uff0c\\u8fd9\\u91cc\\u4f20\\u5165\\u7684\\u5f00\\u4ed3\\u4ef7\\u683c\\u662f0\\uff0c\\u610f\\u5473\\u7740\\u4ef7\\u683c\\u5f71\\u54cd\\u4e00\\u76f4\\u662f0\\n        // (uint priceImpactP, ) = pairInfos.getTradePriceImpact(\\n        //     0,\\n        //     t.pairIndex,\\n        //     t.buy,\\n        //     t.positionSizeDai * t.leverage\\n        // );\\n\\n        //require(priceImpactP * t.leverage <= pairInfos.maxNegativePnlOnOpenP(), \\\"PRICE_IMPACT_TOO_HIGH\\\");\\n\\n        storageT.transferDai(msg.sender, address(storageT), t.positionSizeDai);\\n\\n        if(_type != NftRewardsInterfaceV6.OpenLimitOrderType.LEGACY){\\n            uint index = storageT.firstEmptyOpenLimitIndex(msg.sender, t.pairIndex);\\n\\n            storageT.storeOpenLimitOrder(\\n                StorageInterfaceV5.OpenLimitOrder(\\n                    msg.sender,\\n                    t.pairIndex,\\n                    index,\\n                    t.positionSizeDai,\\n                    spreadReductionP,\\n                    t.buy,\\n                    t.leverage,\\n                    t.tp,\\n                    t.sl,\\n                    t.openPrice,\\n                    t.openPrice,\\n                    block.number,\\n                    0\\n                )\\n            );\\n\\n            // aggregator.nftRewards().setOpenLimitOrderType(msg.sender, t.pairIndex, index, _type);\\n\\n            emit OpenLimitPlaced(msg.sender, t.pairIndex, index);\\n\\n        }else{\\n            // orderID\\u662f\\u4e0echainlink\\u4ea4\\u4e92\\u7684id\\uff0c\\u6b64\\u51fd\\u6570\\u5c06\\u4f1a\\u6ce8\\u518c\\u4e00\\u4e2a\\u4ea4\\u4e92\\u4e8b\\u4ef6\\u7b49\\u5f85chainlink\\u5904\\u7406\\n            uint orderId = aggregator.getPrice(\\n                t.pairIndex, \\n                AggregatorInterfaceV6.OrderType.MARKET_OPEN, \\n                t.positionSizeDai * t.leverage\\n            );\\n\\n            storageT.storePendingMarketOrder(\\n                StorageInterfaceV5.PendingMarketOrder(\\n                    StorageInterfaceV5.Trade(\\n                        msg.sender,\\n                        t.pairIndex,\\n                        0, 0,\\n                        t.positionSizeDai,\\n                        0, \\n                        t.buy,\\n                        t.leverage,\\n                        t.tp,\\n                        t.sl\\n                    ),\\n                    0,\\n                    t.openPrice,\\n                    _slippageP,\\n                    spreadReductionP,\\n                    0\\n                ), orderId, true\\n            );\\n\\n            emit MarketOrderInitiated(msg.sender, t.pairIndex, true, orderId);\\n        }\\n\\n        // storageT.storeReferral(msg.sender, _referral);\\n    }\\n\\n    // Close trade (MARKET)\\n    function closeTradeMarket(uint _pairIndex, uint _index) external notContract notDone{\\n        \\n        StorageInterfaceV5.Trade memory t = storageT.openTrades(msg.sender, _pairIndex, _index);\\n        StorageInterfaceV5.TradeInfo memory i = storageT.openTradesInfo(msg.sender, _pairIndex, _index);\\n\\n        require(storageT.pendingOrderIdsCount(msg.sender) < storageT.maxPendingMarketOrders(), \\n            \\\"MAX_PENDING_ORDERS\\\");\\n        require(!i.beingMarketClosed, \\\"ALREADY_BEING_CLOSED\\\");\\n        require(t.leverage > 0, \\\"NO_TRADE\\\");\\n\\n        uint orderId = storageT.priceAggregator().getPrice(\\n            _pairIndex, \\n            AggregatorInterfaceV6.OrderType.MARKET_CLOSE, \\n            t.initialPosToken * t.leverage * i.tokenPriceDai / PRECISION\\n        );\\n\\n        storageT.storePendingMarketOrder(\\n            StorageInterfaceV5.PendingMarketOrder(\\n                StorageInterfaceV5.Trade(msg.sender, _pairIndex, _index, 0, 0, 0, false, 0, 0, 0),\\n                0, 0, 0, 0, 0\\n            ), orderId, false\\n        );\\n\\n        emit MarketOrderInitiated(msg.sender, _pairIndex, false, orderId);\\n    }\\n\\n    // Manage limit order (OPEN)\\n    function updateOpenLimitOrder(\\n        uint _pairIndex, \\n        uint _index, \\n        uint _price,        // PRECISION\\n        uint _tp,\\n        uint _sl\\n    ) external notContract notDone{\\n\\n        require(storageT.hasOpenLimitOrder(msg.sender, _pairIndex, _index), \\\"NO_LIMIT\\\");\\n\\n        StorageInterfaceV5.OpenLimitOrder memory o = storageT.getOpenLimitOrder(msg.sender, _pairIndex, _index);\\n        require(block.number - o.block >= limitOrdersTimelock, \\\"LIMIT_TIMELOCK\\\");\\n\\n        require(_tp == 0 || (o.buy ? _price < _tp : _price > _tp), \\\"WRONG_TP\\\");\\n        require(_sl == 0 || (o.buy ? _price > _sl : _price < _sl), \\\"WRONG_SL\\\");\\n\\n        o.minPrice = _price;\\n        o.maxPrice = _price;\\n\\n        o.tp = _tp;\\n        o.sl = _sl;\\n\\n        storageT.updateOpenLimitOrder(o);\\n\\n        emit OpenLimitUpdated(msg.sender, _pairIndex, _index, _price, _tp, _sl);\\n    }\\n    function cancelOpenLimitOrder(uint _pairIndex, uint _index) external notContract notDone{\\n\\n        require(storageT.hasOpenLimitOrder(msg.sender, _pairIndex, _index), \\\"NO_LIMIT\\\");\\n\\n        StorageInterfaceV5.OpenLimitOrder memory o = storageT.getOpenLimitOrder(msg.sender, _pairIndex, _index);\\n        require(block.number - o.block >= limitOrdersTimelock, \\\"LIMIT_TIMELOCK\\\");\\n\\n        storageT.transferDai(address(storageT), msg.sender, o.positionSize);\\n        storageT.unregisterOpenLimitOrder(msg.sender, _pairIndex, _index);\\n\\n        emit OpenLimitCanceled(msg.sender, _pairIndex, _index);\\n    }\\n\\n    // Manage limit order (TP/SL)\\n    function updateTp(uint _pairIndex, uint _index, uint _newTp) external notContract notDone{\\n\\n        StorageInterfaceV5.Trade memory t = storageT.openTrades(msg.sender, _pairIndex, _index);\\n        StorageInterfaceV5.TradeInfo memory i = storageT.openTradesInfo(msg.sender, _pairIndex, _index);\\n\\n        require(t.leverage > 0, \\\"NO_TRADE\\\");\\n        require(block.number - i.tpLastUpdated >= limitOrdersTimelock, \\\"LIMIT_TIMELOCK\\\");\\n\\n        storageT.updateTp(msg.sender, _pairIndex, _index, _newTp);\\n\\n        emit TpUpdated(msg.sender, _pairIndex, _index, _newTp);\\n    }\\n    function updateSl(uint _pairIndex, uint _index, uint _newSl) external notContract notDone{\\n\\n        StorageInterfaceV5.Trade memory t = storageT.openTrades(msg.sender, _pairIndex, _index);\\n        StorageInterfaceV5.TradeInfo memory i = storageT.openTradesInfo(msg.sender, _pairIndex, _index);\\n\\n        require(t.leverage > 0, \\\"NO_TRADE\\\");\\n\\n        uint maxSlDist = t.openPrice * MAX_SL_P / 100 / t.leverage;\\n        require(_newSl == 0 || (t.buy ? _newSl >= t.openPrice - maxSlDist : _newSl <= t.openPrice + maxSlDist), \\n            \\\"SL_TOO_BIG\\\");\\n        \\n        require(block.number - i.slLastUpdated >= limitOrdersTimelock, \\\"LIMIT_TIMELOCK\\\");\\n\\n        AggregatorInterfaceV6 aggregator = storageT.priceAggregator();\\n\\n        if(_newSl == 0 || !aggregator.pairsStorage().guaranteedSlEnabled(_pairIndex)){\\n\\n            storageT.updateSl(msg.sender, _pairIndex, _index, _newSl);\\n            emit SlUpdated(msg.sender, _pairIndex, _index, _newSl);\\n\\n        }else{\\n            uint levPosDai = t.initialPosToken * i.tokenPriceDai * t.leverage;\\n\\n            t.initialPosToken -= storageT.handleDevGovFees(\\n                t.pairIndex, \\n                levPosDai / 2 / aggregator.tokenPriceDai(),\\n                false,\\n                false\\n            );\\n\\n            storageT.updateTrade(t);\\n\\n            uint orderId = aggregator.getPrice(\\n                _pairIndex,\\n                AggregatorInterfaceV6.OrderType.UPDATE_SL, \\n                levPosDai / PRECISION\\n            );\\n\\n            aggregator.storePendingSlOrder(\\n                orderId, \\n                AggregatorInterfaceV6.PendingSl(msg.sender, _pairIndex, _index, t.openPrice, t.buy, _newSl)\\n            );\\n            \\n            emit SlUpdateInitiated(msg.sender, _pairIndex, _index, _newSl, orderId);\\n        }\\n    }\\n\\n    // Execute limit order\\n    /// @notice \\u6267\\u884c\\u8ba2\\u5355\\u7684\\u51fd\\u6570\\uff0c\\u673a\\u5668\\u4eba\\u6267\\u884c\\u7684\\n    function executeNftOrder(\\n        StorageInterfaceV5.LimitOrder _orderType, \\n        address _trader, \\n        uint _pairIndex, \\n        uint _index,\\n        uint _nftId, \\n        uint _nftType\\n    ) external notContract notDone{\\n\\n        // require(_nftType >= 1 && _nftType <= 5, \\\"WRONG_NFT_TYPE\\\");\\n        // require(storageT.nfts(_nftType-1).ownerOf(_nftId) == msg.sender, \\\"NO_NFT\\\");\\n        // require(block.number >= storageT.nftLastSuccess(_nftId) + storageT.nftSuccessTimelock(),\\n        //     \\\"SUCCESS_TIMELOCK\\\");\\n\\n        StorageInterfaceV5.Trade memory t;\\n\\n        // TODO: \\u51e0\\u79cd\\u7c7b\\u578b\\u5206\\u522b\\u4ee3\\u8868\\u4ec0\\u4e48\\u4e1a\\u52a1\\u903b\\u8f91\\uff1f\\n        // \\u5f00\\u4ed3\\u8ba2\\u5355\\n        if(_orderType == StorageInterfaceV5.LimitOrder.OPEN){\\n            require(storageT.hasOpenLimitOrder(_trader, _pairIndex, _index), \\\"NO_LIMIT\\\");\\n\\n        }else{\\n            t = storageT.openTrades(_trader, _pairIndex, _index);\\n\\n            require(t.leverage > 0, \\\"NO_TRADE\\\");\\n            // \\u6b62\\u635f\\u8ba2\\u5355\\n            require(_orderType != StorageInterfaceV5.LimitOrder.SL || t.sl > 0, \\\"NO_SL\\\");\\n\\n            // \\u5f3a\\u5e73\\u8ba2\\u5355\\n            if(_orderType == StorageInterfaceV5.LimitOrder.LIQ){\\n                uint liqPrice = getTradeLiquidationPrice(t);\\n                require(t.sl == 0 || (t.buy ? liqPrice > t.sl : liqPrice < t.sl), \\\"HAS_SL\\\");\\n            }\\n        }\\n\\n        AggregatorInterfaceV6 aggregator = storageT.priceAggregator();\\n        NftRewardsInterfaceV6 nftIncentives = aggregator.nftRewards();\\n\\n        NftRewardsInterfaceV6.TriggeredLimitId memory triggeredLimitId = NftRewardsInterfaceV6.TriggeredLimitId(\\n            _trader, _pairIndex, _index, _orderType\\n        );\\n\\n        // 5\\u4e2a\\u533a\\u5757\\u4e4b\\u5185\\u6ca1\\u6709\\u88ab\\u89e6\\u53d1\\uff0c\\u5c31\\u4f1a\\u8d85\\u65f6\\n        if(!nftIncentives.triggered(triggeredLimitId) || nftIncentives.timedOut(triggeredLimitId)){\\n            \\n            uint leveragedPosDai;\\n\\n            // \\u6821\\u9a8c\\n            if(_orderType == StorageInterfaceV5.LimitOrder.OPEN){\\n                StorageInterfaceV5.OpenLimitOrder memory l = storageT.getOpenLimitOrder(_trader, _pairIndex, _index);\\n                leveragedPosDai = l.positionSize * l.leverage;\\n\\n                (uint priceImpactP, ) = pairInfos.getTradePriceImpact(\\n                    0,\\n                    l.pairIndex,\\n                    l.buy,\\n                    leveragedPosDai\\n                );\\n                \\n                require(priceImpactP * l.leverage <= pairInfos.maxNegativePnlOnOpenP(), \\\"PRICE_IMPACT_TOO_HIGH\\\");\\n            }else{\\n                StorageInterfaceV5.TradeInfo memory i = storageT.openTradesInfo(_trader, _pairIndex, _index);\\n                leveragedPosDai = t.initialPosToken * i.tokenPriceDai * t.leverage / PRECISION;\\n            }\\n\\n            // \\u652f\\u4ed8link\\u4ee3\\u5e01\\n            storageT.transferLinkToAggregator(msg.sender, _pairIndex, leveragedPosDai);\\n\\n            uint orderId = aggregator.getPrice(\\n                _pairIndex, \\n                _orderType == StorageInterfaceV5.LimitOrder.OPEN ? \\n                    AggregatorInterfaceV6.OrderType.LIMIT_OPEN : \\n                    AggregatorInterfaceV6.OrderType.LIMIT_CLOSE,\\n                leveragedPosDai\\n            );\\n\\n            // \\u5199\\u5165pending\\u8ba2\\u5355\\u6c60\\n            storageT.storePendingNftOrder(\\n                StorageInterfaceV5.PendingNftOrder(\\n                    msg.sender,\\n                    _nftId,\\n                    _trader,\\n                    _pairIndex,\\n                    _index,\\n                    _orderType\\n                ), orderId\\n            );\\n\\n            // \\n            nftIncentives.storeFirstToTrigger(triggeredLimitId, msg.sender);\\n            emit NftOrderInitiated(msg.sender, _trader, _pairIndex, orderId);\\n\\n        }else{\\n            // \\u8fd9\\u91cc\\u600e\\u4e48\\u53ef\\u80fd\\u505a\\u5230same block\\uff1f\\uff1f\\n            nftIncentives.storeTriggerSameBlock(triggeredLimitId, msg.sender);\\n            emit NftOrderSameBlock(msg.sender, _trader, _pairIndex);\\n        }\\n    }\\n    // Avoid stack too deep error in executeNftOrder\\n    function getTradeLiquidationPrice(StorageInterfaceV5.Trade memory t) private view returns(uint){\\n        return pairInfos.getTradeLiquidationPrice(\\n            t.trader,\\n            t.pairIndex,\\n            t.index,\\n            t.openPrice,\\n            t.buy,\\n            t.initialPosToken * storageT.openTradesInfo(t.trader, t.pairIndex, t.index).tokenPriceDai / PRECISION,\\n            t.leverage\\n        );\\n    }\\n\\n    // Market timeout \\u4ea4\\u6613\\u8005\\u5c06\\u81ea\\u5df1\\u5df2\\u7ecf\\u8d85\\u65f6\\u7684\\u8ba2\\u5355\\u8d4e\\u56de\\n    function openTradeMarketTimeout(uint _order) external notContract notDone{\\n\\n        StorageInterfaceV5.PendingMarketOrder memory o = storageT.reqID_pendingMarketOrder(_order);\\n        StorageInterfaceV5.Trade memory t = o.trade;\\n\\n        require(o.block > 0 && block.number >= o.block + marketOrdersTimeout, \\n            \\\"WAIT_TIMEOUT\\\");\\n        require(t.trader == msg.sender, \\\"NOT_YOUR_ORDER\\\");\\n        require(t.leverage > 0, \\\"WRONG_MARKET_ORDER_TYPE\\\");\\n\\n        storageT.transferDai(address(storageT), msg.sender, t.positionSizeDai);\\n        storageT.unregisterPendingMarketOrder(_order, true);\\n\\n        emit ChainlinkCallbackTimeout(_order, o);\\n    }\\n    // \\u5173\\u95ed\\u8d85\\u65f6\\u7684\\u8ba2\\u5355\\n    function closeTradeMarketTimeout(uint _order) external notContract notDone{\\n\\n        StorageInterfaceV5.PendingMarketOrder memory o = storageT.reqID_pendingMarketOrder(_order);\\n        StorageInterfaceV5.Trade memory t = o.trade;\\n\\n        require(o.block > 0 && block.number >= o.block + marketOrdersTimeout, \\n            \\\"WAIT_TIMEOUT\\\");\\n        require(t.trader == msg.sender, \\\"NOT_YOUR_ORDER\\\");\\n        require(t.leverage == 0, \\\"WRONG_MARKET_ORDER_TYPE\\\");\\n\\n        storageT.unregisterPendingMarketOrder(_order, false);\\n\\n        (bool success, ) = address(this).delegatecall(\\n            abi.encodeWithSignature(\\n                \\\"closeTradeMarket(uint256,uint256)\\\",\\n                t.pairIndex,\\n                t.index\\n            )\\n        );\\n\\n        if(!success){\\n            emit CouldNotCloseTrade(msg.sender, t.pairIndex, t.index);\\n        }\\n\\n        emit ChainlinkCallbackTimeout(_order, o);\\n    }\\n}\",\"keccak256\":\"0x5cd4bc14ee3958884e53d0803ba2ace59b09c32a4070cfbde3433f208ae31745\",\"license\":\"MIT\"},\"contracts/interfaces/GNSPairInfosInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface GNSPairInfosInterfaceV6{\\n    function maxNegativePnlOnOpenP() external view returns(uint); // PRECISION (%)\\n\\n    function storeTradeInitialAccFees(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        bool long\\n    ) external;\\n\\n    function getTradePriceImpact(\\n        uint openPrice,   // PRECISION\\n        uint pairIndex,\\n        bool long,\\n        uint openInterest // 1e18 (DAI)\\n    ) external view returns(\\n        uint priceImpactP,      // PRECISION (%)\\n        uint priceAfterImpact   // PRECISION\\n    );\\n\\n   function getTradeLiquidationPrice(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        uint openPrice,  // PRECISION\\n        bool long,\\n        uint collateral, // 1e18 (DAI)\\n        uint leverage\\n    ) external view returns(uint); // PRECISION\\n\\n    function getTradeValue(\\n        address trader,\\n        uint pairIndex,\\n        uint index,\\n        bool long,\\n        uint collateral,   // 1e18 (DAI)\\n        uint leverage,\\n        int percentProfit, // PRECISION (%)\\n        uint closingFee    // 1e18 (DAI)\\n    ) external returns(uint); // 1e18 (DAI)\\n}\",\"keccak256\":\"0x2d848cd9c920cd59c8b6dd4cc3c46cf6d08daf774c7815009660c2ffd4a21180\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface NftInterfaceV5{\\n    function balanceOf(address) external view returns (uint);\\n    function ownerOf(uint) external view returns (address);\\n    function transferFrom(address, address, uint) external;\\n    function tokenOfOwnerByIndex(address, uint) external view returns(uint);\\n}\",\"keccak256\":\"0xc15a2883e44dce70305e896f2492f485c77f1a01595a9bb42d2662a22cfa5274\",\"license\":\"MIT\"},\"contracts/interfaces/PairsStorageInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface PairsStorageInterfaceV6{\\n    enum FeedCalculation { DEFAULT, INVERT, COMBINE }    // FEED 1, 1 / (FEED 1), (FEED 1)/(FEED 2)\\n    struct Feed{ address feed1; address feed2; FeedCalculation feedCalculation; uint maxDeviationP; } // PRECISION (%)\\n    function incrementCurrentOrderId() external returns(uint);\\n    function updateGroupCollateral(uint, uint, bool, bool) external;\\n    function pairJob(uint) external returns(string memory, string memory, bytes32, uint);\\n    function pairFeed(uint) external view returns(Feed memory);\\n    function pairSpreadP(uint) external view returns(uint);\\n    function pairMinLeverage(uint) external view returns(uint);\\n    function pairMaxLeverage(uint) external view returns(uint);\\n    function groupMaxCollateral(uint) external view returns(uint);\\n    function groupCollateral(uint, bool) external view returns(uint);\\n    function guaranteedSlEnabled(uint) external view returns(bool);\\n    function pairOpenFeeP(uint) external view returns(uint);\\n    function pairCloseFeeP(uint) external view returns(uint);\\n    function pairOracleFeeP(uint) external view returns(uint);\\n    function pairNftLimitOrderFeeP(uint) external view returns(uint);\\n    function pairReferralFeeP(uint) external view returns(uint);\\n    function pairMinLevPosDai(uint) external view returns(uint);\\n}\",\"keccak256\":\"0x74f54cf7593d734351ff34e0f86065cc89bb5a5b10b8618a9438d0ea2e4918a1\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport './UniswapRouterInterfaceV5.sol';\\nimport './TokenInterfaceV5.sol';\\nimport './NftInterfaceV5.sol';\\nimport './VaultInterfaceV5.sol';\\nimport './PairsStorageInterfaceV6.sol';\\npragma solidity 0.8.14;\\n\\ninterface StorageInterfaceV5{\\n    enum LimitOrder { TP, SL, LIQ, OPEN }\\n    struct Trader{\\n        uint leverageUnlocked;\\n        address referral;\\n        uint referralRewardsTotal;  // 1e18\\n    }\\n    struct Trade{\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken;       // 1e18\\n        uint positionSizeDai;       // 1e18\\n        uint openPrice;             // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp;                    // PRECISION\\n        uint sl;                    // PRECISION\\n    }\\n    struct TradeInfo{\\n        uint tokenId;\\n        uint tokenPriceDai;         // PRECISION\\n        uint openInterestDai;       // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder{\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize;          // 1e18 (DAI or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp;                    // PRECISION (%)\\n        uint sl;                    // PRECISION (%)\\n        uint minPrice;              // PRECISION\\n        uint maxPrice;              // PRECISION\\n        uint block;\\n        uint tokenId;               // index in supportedTokens\\n    }\\n    struct PendingMarketOrder{\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice;           // PRECISION\\n        uint slippageP;             // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId;               // index in supportedTokens\\n    }\\n    struct PendingNftOrder{\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n    function PRECISION() external pure returns(uint);\\n    function gov() external view returns(address);\\n    function dev() external view returns(address);\\n    function dai() external view returns(TokenInterfaceV5);\\n    // function token() external view returns(TokenInterfaceV5);\\n    function linkErc677() external view returns(TokenInterfaceV5);\\n    function tokenDaiRouter() external view returns(UniswapRouterInterfaceV5);\\n    function priceAggregator() external view returns(AggregatorInterfaceV6);\\n    function vault() external view returns(VaultInterfaceV5);\\n    function trading() external view returns(address);\\n    function callbacks() external view returns(address);\\n    function handleTokens(address,uint,bool) external;\\n    function transferDai(address, address, uint) external;\\n    function transferLinkToAggregator(address, uint, uint) external;\\n    function unregisterTrade(address, uint, uint) external;\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n    function hasOpenLimitOrder(address, uint, uint) external view returns(bool);\\n    function storePendingMarketOrder(PendingMarketOrder memory, uint, bool) external;\\n    function storeReferral(address, address) external;\\n    function openTrades(address, uint, uint) external view returns(Trade memory);\\n    function openTradesInfo(address, uint, uint) external view returns(TradeInfo memory);\\n    function updateSl(address, uint, uint, uint) external;\\n    function updateTp(address, uint, uint, uint) external;\\n    function getOpenLimitOrder(address, uint, uint) external view returns(OpenLimitOrder memory);\\n    function spreadReductionsP(uint) external view returns(uint);\\n    function positionSizeTokenDynamic(uint,uint) external view returns(uint);\\n    function maxSlP() external view returns(uint);\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n    function reqID_pendingMarketOrder(uint) external view returns(PendingMarketOrder memory);\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n    function firstEmptyTradeIndex(address, uint) external view returns(uint);\\n    function firstEmptyOpenLimitIndex(address, uint) external view returns(uint);\\n    function increaseNftRewards(uint, uint) external;\\n    function nftSuccessTimelock() external view returns(uint);\\n    function currentPercentProfit(uint,uint,bool,uint) external view returns(int);\\n    function reqID_pendingNftOrder(uint) external view returns(PendingNftOrder memory);\\n    function setNftLastSuccess(uint) external;\\n    function updateTrade(Trade memory) external;\\n    function nftLastSuccess(uint) external view returns(uint);\\n    function unregisterPendingNftOrder(uint) external;\\n    function handleDevGovFees(uint, uint, bool, bool) external returns(uint);\\n    function distributeLpRewards(uint) external;\\n    function getReferral(address) external view returns(address);\\n    function increaseReferralRewards(address, uint) external;\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n    function setLeverageUnlocked(address, uint) external;\\n    function getLeverageUnlocked(address) external view returns(uint);\\n    function openLimitOrdersCount(address, uint) external view returns(uint);\\n    function maxOpenLimitOrdersPerPair() external view returns(uint);\\n    function openTradesCount(address, uint) external view returns(uint);\\n    function pendingMarketOpenCount(address, uint) external view returns(uint);\\n    function pendingMarketCloseCount(address, uint) external view returns(uint);\\n    function maxTradesPerPair() external view returns(uint);\\n    function maxTradesPerBlock() external view returns(uint);\\n    function tradesPerBlock(uint) external view returns(uint);\\n    function pendingOrderIdsCount(address) external view returns(uint);\\n    function maxPendingMarketOrders() external view returns(uint);\\n    function maxGainP() external view returns(uint);\\n    function defaultLeverageUnlocked() external view returns(uint);\\n    function openInterestDai(uint, uint) external view returns(uint);\\n    function getPendingOrderIds(address) external view returns(uint[] memory);\\n    function traders(address) external view returns(Trader memory);\\n    function nfts(uint) external view returns(NftInterfaceV5);\\n}\\n\\ninterface AggregatorInterfaceV6{\\n    enum OrderType { MARKET_OPEN, MARKET_CLOSE, LIMIT_OPEN, LIMIT_CLOSE, UPDATE_SL }\\n    function pairsStorage() external view returns(PairsStorageInterfaceV6);\\n    function nftRewards() external view returns(NftRewardsInterfaceV6);\\n    function getPrice(uint,OrderType,uint) external returns(uint);\\n    function tokenPriceDai() external view returns(uint);\\n    function linkFee(uint,uint) external view returns(uint);\\n    function tokenDaiReservesLp() external view returns(uint, uint);\\n    function pendingSlOrders(uint) external view returns(PendingSl memory);\\n    function storePendingSlOrder(uint orderId, PendingSl calldata p) external;\\n    function unregisterPendingSlOrder(uint orderId) external;\\n    struct PendingSl{address trader; uint pairIndex; uint index; uint openPrice; bool buy; uint newSl; }\\n}\\n\\ninterface NftRewardsInterfaceV6{\\n    struct TriggeredLimitId{ address trader; uint pairIndex; uint index; StorageInterfaceV5.LimitOrder order; }\\n    enum OpenLimitOrderType{ LEGACY, REVERSAL, MOMENTUM }\\n    function storeFirstToTrigger(TriggeredLimitId calldata, address) external;\\n    function storeTriggerSameBlock(TriggeredLimitId calldata, address) external;\\n    function unregisterTrigger(TriggeredLimitId calldata) external;\\n    function distributeNftReward(TriggeredLimitId calldata, uint) external;\\n    function openLimitOrderTypes(address, uint, uint) external view returns(OpenLimitOrderType);\\n    function setOpenLimitOrderType(address, uint, uint, OpenLimitOrderType) external;\\n    function triggered(TriggeredLimitId calldata) external view returns(bool);\\n    function timedOut(TriggeredLimitId calldata) external view returns(bool);\\n}\",\"keccak256\":\"0x02c06cbb3f187939133f2c989e77a5e0b0d371444071f9a8d3ae1a3ed61fe865\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface TokenInterfaceV5{\\n    function burn(address, uint256) external;\\n    function mint(address, uint256) external;\\n    function transfer(address, uint256) external returns (bool);\\n    function transferFrom(address, address, uint256) external returns(bool);\\n    function balanceOf(address) external view returns(uint256);\\n    function hasRole(bytes32, address) external view returns (bool);\\n    function approve(address, uint256) external returns (bool);\\n    function allowance(address, address) external view returns (uint256);\\n}\",\"keccak256\":\"0x839cb0952ddb74fd2cc563cbc511a7f4cec56599cb7cc3502f97c32327f2fe58\",\"license\":\"MIT\"},\"contracts/interfaces/UniswapRouterInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface UniswapRouterInterfaceV5{\\n\\tfunction swapExactTokensForTokens(\\n\\t\\tuint amountIn,\\n\\t\\tuint amountOutMin,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint deadline\\n\\t) external returns (uint[] memory amounts);\\n\\n\\tfunction swapTokensForExactTokens(\\n\\t\\tuint amountOut,\\n\\t\\tuint amountInMax,\\n\\t\\taddress[] calldata path,\\n\\t\\taddress to,\\n\\t\\tuint deadline\\n\\t) external returns (uint[] memory amounts);\\n}\",\"keccak256\":\"0x366be084acb30ed686cc7f4999f30568ebdb11e6cc5909c6b24f95092b4dbddf\",\"license\":\"MIT\"},\"contracts/interfaces/VaultInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.14;\\n\\ninterface VaultInterfaceV5{\\n\\tfunction sendDaiToTrader(address, uint) external;\\n\\tfunction receiveDaiFromTrader(address, uint, uint) external;\\n\\tfunction currentBalanceDai() external view returns(uint);\\n\\tfunction distributeRewardDai(uint) external;\\n}\",\"keccak256\":\"0xbbd6a93a058b4da7c2b5114ece35d743ef6099d928020835664169a0b5895825\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052690fe1c215e8f838e00000600055601e600155601e6002553480156200002957600080fd5b506040516200506c3803806200506c8339810160408190526200004c916200007d565b6001600160a01b039182166080521660a052620000bc565b6001600160a01b03811681146200007a57600080fd5b50565b600080604083850312156200009157600080fd5b82516200009e8162000064565b6020840151909250620000b18162000064565b809150509250929050565b60805160a051614e176200025560003960008181612d1001528181612d7f0152614337015260008181610322015281816103f20152818161059901528181610661015281816107e00152818161096b015281816109fe01528181610aa401528181610c8201528181610e14015281816110590152818161115b015281816111ee0152818161129001528181611325015281816113ba01528181611490015281816115250152818161194c01528181611a0301528181611a7a01528181611c5801528181611e4601528181611eeb01528181611f5a01528181611fef015281816121440152818161226d015281816123cc015281816124f1015281816127560152818161282a015281816129ef01528181612c4701528181612e9301528181612f5c0152818161305c01528181613308015281816133d8015281816134b50152818161354e015281816136660152818161370b015281816138c501528181613a5001528181613b2b01528181613c8c01528181613e970152818161407b015281816141200152818161424701526143700152614e176000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80639aa7c0e5116100cd578063b8ebd5cc11610081578063be73fb9911610066578063be73fb9914610270578063d4a1caa714610283578063d8defd151461029657600080fd5b8063b8ebd5cc1461024a578063b9b6573a1461025d57600080fd5b8063ae8421e1116100b2578063ae8421e114610222578063b187bd261461022a578063b81bfa051461023757600080fd5b80639aa7c0e5146101fc578063a2a3c0cb1461020f57600080fd5b80638456cb59116101245780638f062227116101095780638f062227146101b4578063934d1cf4146101d6578063990382cf146101e957600080fd5b80638456cb5914610199578063876d3abd146101a157600080fd5b80630890d22a14610156578063279a165c14610172578063318a368b1461017b578063410c0b7c14610190575b600080fd5b61015f60015481565b6040519081526020015b60405180910390f35b61015f60005481565b61018e6101893660046144b2565b6102a9565b005b61015f60025481565b61018e61065f565b61018e6101af3660046144ed565b61077a565b6003546101c690610100900460ff1681565b6040519015158152602001610169565b61018e6101e43660046144ed565b610aa2565b61018e6101f73660046144ed565b610c1c565b61018e61020a3660046145c0565b610fb5565b61018e61021d36600461469f565b611dd3565b61018e6123ca565b6003546101c69060ff1681565b61018e6102453660046144ed565b6124ef565b61018e6102583660046146c1565b612662565b61018e61026b36600461469f565b613298565b61018e61027e36600461471e565b6135f3565b61018e6102913660046144ed565b613e95565b61018e6102a436600461471e565b614008565b3233146102b557600080fd5b600354610100900460ff16156102ff5760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b60405180910390fd5b604051636e6f99cd60e11b815233600482015260248101869052604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dcdf339a90606401602060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190614755565b6103cc5760405162461bcd60e51b81526020600482015260086024820152671393d7d31253525560c21b60448201526064016102f6565b604051632e21e28b60e21b815233600482015260248101869052604481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b8878a2c906064016101a060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104669190614784565b90506001548161016001514361047c919061484d565b10156104bb5760405162461bcd60e51b815260206004820152600e60248201526d4c494d49545f54494d454c4f434b60901b60448201526064016102f6565b8215806104d857508060a001516104d4578284116104d8565b8284105b61050f5760405162461bcd60e51b8152602060048201526008602482015267057524f4e475f54560c41b60448201526064016102f6565b81158061052c57508060a001516105285781841061052c565b8184115b6105635760405162461bcd60e51b815260206004820152600860248201526715d493d391d7d4d360c21b60448201526064016102f6565b6101208101849052610140810184905260e081018390526101008101829052604051635bb3b04560e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b767608a906105ce908490600401614864565b600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b505060408051338152602081018a9052908101889052606081018790526080810186905260a081018590527f21e15d62c2ece17c1dc11c5fa45dcefdc6f99f199aa111d1363ff242f23e1c5c925060c001905060405180910390a1505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190614904565b6001600160a01b0316336001600160a01b03161461072c5760405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b60448201526064016102f6565b6003805460ff8082161560ff1990921682179092556040519116151581527f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2906020015b60405180910390a1565b32331461078657600080fd5b600354610100900460ff16156107c75760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b60405163b66e6b0560e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b66e6b05906024016101e060405180830381865afa158015610830573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085491906149b4565b80516020820151919250901580159061087e5750600254826020015161087a9190614a45565b4310155b6108b95760405162461bcd60e51b815260206004820152600c60248201526b15d0525517d512535153d55560a21b60448201526064016102f6565b80516001600160a01b031633146109035760405162461bcd60e51b815260206004820152600e60248201526d2727aa2faca7aaa92fa7a92222a960911b60448201526064016102f6565b60008160e00151116109575760405162461bcd60e51b815260206004820152601760248201527f57524f4e475f4d41524b45545f4f524445525f5459504500000000000000000060448201526064016102f6565b608081015160405163373873db60e11b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316600482018190523360248301526044820192909252636e70e7b690606401600060405180830381600087803b1580156109cb57600080fd5b505af11580156109df573d6000803e3d6000fd5b5050604051630195728b60e71b815260048101869052600160248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063cab945809150604401600060405180830381600087803b158015610a4c57600080fd5b505af1158015610a60573d6000803e3d6000fd5b505050507f3adaa586cdbe84dd24e45bd7dada6da933d7c2d1c7b4e4cd02fce033356decb18383604051610a95929190614b15565b60405180910390a1505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190614904565b6001600160a01b0316336001600160a01b031614610b6f5760405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b60448201526064016102f6565b60008111610ba95760405162461bcd60e51b8152602060048201526007602482015266056414c55455f360cc1b60448201526064016102f6565b6000819055604080518181526009918101919091527f6d6178506f7344616900000000000000000000000000000000000000000000006060820152602081018290527f8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab906080015b60405180910390a150565b323314610c2857600080fd5b600354610100900460ff1615610c695760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b60405163b66e6b0560e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b66e6b05906024016101e060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf691906149b4565b805160208201519192509015801590610d2057506002548260200151610d1c9190614a45565b4310155b610d5b5760405162461bcd60e51b815260206004820152600c60248201526b15d0525517d512535153d55560a21b60448201526064016102f6565b80516001600160a01b03163314610da55760405162461bcd60e51b815260206004820152600e60248201526d2727aa2faca7aaa92fa7a92222a960911b60448201526064016102f6565b60e081015115610df75760405162461bcd60e51b815260206004820152601760248201527f57524f4e475f4d41524b45545f4f524445525f5459504500000000000000000060448201526064016102f6565b604051630195728b60e71b815260048101849052600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063cab9458090604401600060405180830381600087803b158015610e6057600080fd5b505af1158015610e74573d6000803e3d6000fd5b505050602082015160408084015190516024810192909252604482015260009150309060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a2a3c0cb60e01b17905251610ee49190614b2a565b600060405180830381855af49150503d8060008114610f1f576040519150601f19603f3d011682016040523d82523d6000602084013e610f24565b606091505b5050905080610f76576020808301516040808501518151338152938401929092528201527f60e497734ddabcd7293fd91739aaf65cf525eb539c97be528125a235a89288d89060600160405180910390a15b7f3adaa586cdbe84dd24e45bd7dada6da933d7c2d1c7b4e4cd02fce033356decb18484604051610fa7929190614b15565b60405180910390a150505050565b323314610fc157600080fd5b600354610100900460ff16156110025760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b60035460ff16156110555760405162461bcd60e51b815260206004820152600660248201527f504155534544000000000000000000000000000000000000000000000000000060448201526064016102f6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633078fff56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d99190614904565b90506000816001600160a01b03166335b03c176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f9190614904565b905060008086116111515760006111ea565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016633dae10a061118b60018961484d565b6040518263ffffffff1660e01b81526004016111a991815260200190565b602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190614b65565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f65d9dbe6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e9190614b65565b6020890151604051634bf3ccad60e11b815233600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906397e7995a90604401602060405180830381865afa1580156112df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113039190614b65565b60208a0151604051639c8912f160e01b815233600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639c8912f190604401602060405180830381865afa158015611374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113989190614b65565b60208b01516040516307218dad60e21b815233600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c8636b490604401602060405180830381865afa158015611409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142d9190614b65565b6114379190614a45565b6114419190614a45565b1061148e5760405162461bcd60e51b815260206004820152601360248201527f4d41585f5452414445535f5045525f504149520000000000000000000000000060448201526064016102f6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638049fde76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115109190614b65565b60405163f7b3c6fd60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f7b3c6fd90602401602060405180830381865afa158015611574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115989190614b65565b106115e55760405162461bcd60e51b815260206004820152601260248201527f4d41585f50454e44494e475f4f5244455253000000000000000000000000000060448201526064016102f6565b6000548860800151111561163b5760405162461bcd60e51b815260206004820152600d60248201527f41424f56455f4d41585f504f530000000000000000000000000000000000000060448201526064016102f6565b602088015160405163066c581160e11b815260048101919091526001600160a01b03831690630cd8b02290602401602060405180830381865afa158015611686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116aa9190614b65565b8860e0015189608001516116be9190614b7e565b101561170c5760405162461bcd60e51b815260206004820152600d60248201527f42454c4f575f4d494e5f504f530000000000000000000000000000000000000060448201526064016102f6565b60008860e001511180156117925750602088015160405163059a992d60e41b815260048101919091526001600160a01b038316906359a992d090602401602060405180830381865afa158015611766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178a9190614b65565b8860e0015110155b801561181057506020880151604051630a06da4f60e21b815260048101919091526001600160a01b0383169063281b693c90602401602060405180830381865afa1580156117e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118089190614b65565b8860e0015111155b61185c5760405162461bcd60e51b815260206004820152601260248201527f4c455645524147455f494e434f5252454354000000000000000000000000000060448201526064016102f6565b610100880151158061189057508760c00151611883578760a0015188610100015110611890565b8760a00151886101000151115b6118c75760405162461bcd60e51b8152602060048201526008602482015267057524f4e475f54560c41b60448201526064016102f6565b61012088015115806118fb57508760c001516118ee578760a00151886101200151116118fb565b8760a00151886101200151105b6119325760405162461bcd60e51b815260206004820152600860248201526715d493d391d7d4d360c21b60448201526064016102f6565b608088015160405163373873db60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316602482018190526044820192909252636e70e7b690606401600060405180830381600087803b1580156119a657600080fd5b505af11580156119ba573d6000803e3d6000fd5b50600092506119c7915050565b8760028111156119d9576119d9614b9d565b14611bc757602088015160405163226a27ad60e11b815233600482015260248101919091526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906344d44f5a90604401602060405180830381865afa158015611a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a769190614b65565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d3b5fe70604051806101a00160405280336001600160a01b031681526020018c6020015181526020018481526020018c6080015181526020018581526020018c60c00151151581526020018c60e0015181526020018c610100015181526020018c610120015181526020018c60a0015181526020018c60a00151815260200143815260200160008152506040518263ffffffff1660e01b8152600401611b499190614864565b600060405180830381600087803b158015611b6357600080fd5b505af1158015611b77573d6000803e3d6000fd5b5050506020808b0151604080513381529283019190915281018390527fdfabd6f206f17b7f2e1f9e0d33c40d30d1e8d7b6a4f520a03fdc1c1811059343915060600160405180910390a150611dc9565b6000836001600160a01b031663fa8dd4988a6020015160008c60e001518d60800151611bf39190614b7e565b6040518463ffffffff1660e01b8152600401611c1193929190614bb3565b6020604051808303816000875af1158015611c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c549190614b65565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c76faf786040518060c00160405280604051806101400160405280336001600160a01b031681526020018e60200151815260200160008152602001600081526020018e608001518152602001600081526020018e60c00151151581526020018e60e0015181526020018e610100015181526020018e61012001518152508152602001600081526020018c60a00151815260200189815260200185815260200160008152508360016040518463ffffffff1660e01b8152600401611d4693929190614bdb565b600060405180830381600087803b158015611d6057600080fd5b505af1158015611d74573d6000803e3d6000fd5b5050506020808b01516040805133815292830191909152600190820152606081018390527f38d5a346bb323dfce6ee611d2fbbfc595310c725ab7ab45bfe0adf3b81b7adab91506080015b60405180910390a1505b5050505050505050565b323314611ddf57600080fd5b600354610100900460ff1615611e205760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b6040516351d407ff60e11b815233600482015260248101839052604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a3a80ffe9060640161014060405180830381865afa158015611e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eba9190614c02565b604051638c8ff1d560e01b815233600482015260248101859052604481018490529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638c8ff1d59060640160c060405180830381865afa158015611f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f569190614c1f565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638049fde76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fda9190614b65565b60405163f7b3c6fd60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f7b3c6fd90602401602060405180830381865afa15801561203e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120629190614b65565b106120af5760405162461bcd60e51b815260206004820152601260248201527f4d41585f50454e44494e475f4f5244455253000000000000000000000000000060448201526064016102f6565b8060a00151156121015760405162461bcd60e51b815260206004820152601460248201527f414c52454144595f4245494e475f434c4f53454400000000000000000000000060448201526064016102f6565b60008260e00151116121405760405162461bcd60e51b81526020600482015260086024820152674e4f5f545241444560c01b60448201526064016102f6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633078fff56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c49190614904565b6001600160a01b031663fa8dd4988660016402540be40086602001518860e0015189606001516121f49190614b7e565b6121fe9190614b7e565b6122089190614cad565b6040518463ffffffff1660e01b815260040161222693929190614bb3565b6020604051808303816000875af1158015612245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122699190614b65565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c76faf786040518060c00160405280604051806101400160405280336001600160a01b031681526020018a81526020018981526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525081526020016000815260200160008152602001600081526020016000815260200160008152508360006040518463ffffffff1660e01b815260040161234493929190614bdb565b600060405180830381600087803b15801561235e57600080fd5b505af1158015612372573d6000803e3d6000fd5b50506040805133815260208101899052600091810191909152606081018490527f38d5a346bb323dfce6ee611d2fbbfc595310c725ab7ab45bfe0adf3b81b7adab925060800190505b60405180910390a15050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa158015612428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244c9190614904565b6001600160a01b0316336001600160a01b0316146124975760405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b60448201526064016102f6565b6003805460ff610100808304821615810261ff001990931692909217928390556040517fc3a6f986261de9467c2838c6df8ef74f9107855159205600c0bc7a14cdfd3888936107709390049091161515815260200190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa15801561254d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125719190614904565b6001600160a01b0316336001600160a01b0316146125bc5760405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b60448201526064016102f6565b600081116125f65760405162461bcd60e51b8152602060048201526007602482015266056414c55455f360cc1b60448201526064016102f6565b6002819055604080518181526013918101919091527f6d61726b65744f726465727354696d656f7574000000000000000000000000006060820152602081018290527f8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab90608001610c11565b32331461266e57600080fd5b600354610100900460ff16156126af5760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b61271060405180610140016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081525090565b600387600381111561272457612724614b9d565b036127fd57604051636e6f99cd60e11b81526001600160a01b03878116600483015260248201879052604482018690527f0000000000000000000000000000000000000000000000000000000000000000169063dcdf339a90606401602060405180830381865afa15801561279d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c19190614755565b6127f85760405162461bcd60e51b81526020600482015260086024820152671393d7d31253525560c21b60448201526064016102f6565b6129eb565b6040516351d407ff60e11b81526001600160a01b03878116600483015260248201879052604482018690527f0000000000000000000000000000000000000000000000000000000000000000169063a3a80ffe9060640161014060405180830381865afa158015612872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128969190614c02565b905060008160e00151116128d75760405162461bcd60e51b81526020600482015260086024820152674e4f5f545241444560c01b60448201526064016102f6565b60018760038111156128eb576128eb614b9d565b1415806128fd57506000816101200151115b6129495760405162461bcd60e51b815260206004820152600560248201527f4e4f5f534c00000000000000000000000000000000000000000000000000000060448201526064016102f6565b600287600381111561295d5761295d614b9d565b036129eb57600061296d826142f1565b90508161012001516000148061299d57508160c0015161299457816101200151811061299d565b81610120015181115b6129e95760405162461bcd60e51b815260206004820152600660248201527f4841535f534c000000000000000000000000000000000000000000000000000060448201526064016102f6565b505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633078fff56040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6f9190614904565b90506000816001600160a01b0316635ad9f9936040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad59190614904565b9050600060405180608001604052808a6001600160a01b031681526020018981526020018881526020018b6003811115612b1157612b11614b9d565b905260405163108c3d4960e11b81529091506001600160a01b038316906321187a9290612b42908490600401614d1b565b602060405180830381865afa158015612b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b839190614755565b1580612bf75750604051633f1b72bf60e21b81526001600160a01b0383169063fc6dcafc90612bb6908490600401614d1b565b602060405180830381865afa158015612bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf79190614755565b156131e157600060038b6003811115612c1257612c12614b9d565b03612e6357604051632e21e28b60e21b81526001600160a01b038b81166004830152602482018b9052604482018a90526000917f00000000000000000000000000000000000000000000000000000000000000009091169063b8878a2c906064016101a060405180830381865afa158015612c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cb59190614784565b90508060c001518160600151612ccb9190614b7e565b602082015160a0830151604051633f54af9960e11b81526000600482018190526024820193909352901515604482015260648101839052919350906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637ea95f32906084016040805180830381865afa158015612d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d7a9190614d29565b5090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166380f6cfc26040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dff9190614b65565b60c0830151612e0e9083614b7e565b1115612e5c5760405162461bcd60e51b815260206004820152601560248201527f50524943455f494d504143545f544f4f5f48494748000000000000000000000060448201526064016102f6565b5050612f39565b604051638c8ff1d560e01b81526001600160a01b038b81166004830152602482018b9052604482018a90526000917f000000000000000000000000000000000000000000000000000000000000000090911690638c8ff1d59060640160c060405180830381865afa158015612edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f009190614c1f565b90506402540be4008660e0015182602001518860600151612f219190614b7e565b612f2b9190614b7e565b612f359190614cad565b9150505b604051633348540360e11b8152336004820152602481018a9052604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636690a80690606401600060405180830381600087803b158015612fa857600080fd5b505af1158015612fbc573d6000803e3d6000fd5b506000925050506001600160a01b03851663fa8dd4988b60038f6003811115612fe757612fe7614b9d565b14612ff3576003612ff6565b60025b856040518463ffffffff1660e01b815260040161301593929190614bb3565b6020604051808303816000875af1158015613034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130589190614b65565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663817fa1a46040518060c00160405280336001600160a01b031681526020018b81526020018e6001600160a01b031681526020018d81526020018c81526020018f60038111156130d6576130d6614b9d565b815250836040518363ffffffff1660e01b81526004016130f7929190614d4d565b600060405180830381600087803b15801561311157600080fd5b505af1158015613125573d6000803e3d6000fd5b505060405163308f221b60e21b81526001600160a01b038716925063c23c886c91506131579086903390600401614dae565b600060405180830381600087803b15801561317157600080fd5b505af1158015613185573d6000803e3d6000fd5b5050604080513381526001600160a01b038f1660208201529081018d9052606081018490527f25a4615e0f832491882811af92c23aeadd8e4ea8679eda01bb90f5276ffdf44f9250608001905060405180910390a1505061328c565b6040516346ea285b60e01b81526001600160a01b038316906346ea285b9061320f9084903390600401614dae565b600060405180830381600087803b15801561322957600080fd5b505af115801561323d573d6000803e3d6000fd5b5050604080513381526001600160a01b038d1660208201529081018b90527fde7da272dc52e28c3b33c5c74b461da89b05bd790d845e82db2f69bbf08108e79250606001905060405180910390a15b50505050505050505050565b3233146132a457600080fd5b600354610100900460ff16156132e55760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b604051636e6f99cd60e11b815233600482015260248101839052604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dcdf339a90606401602060405180830381865afa158015613357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061337b9190614755565b6133b25760405162461bcd60e51b81526020600482015260086024820152671393d7d31253525560c21b60448201526064016102f6565b604051632e21e28b60e21b815233600482015260248101839052604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b8878a2c906064016101a060405180830381865afa158015613428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061344c9190614784565b905060015481610160015143613462919061484d565b10156134a15760405162461bcd60e51b815260206004820152600e60248201526d4c494d49545f54494d454c4f434b60901b60448201526064016102f6565b606081015160405163373873db60e11b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316600482018190523360248301526044820192909252636e70e7b690606401600060405180830381600087803b15801561351557600080fd5b505af1158015613529573d6000803e3d6000fd5b505060405163b4b0f56760e01b815233600482015260248101869052604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063b4b0f5679150606401600060405180830381600087803b15801561359c57600080fd5b505af11580156135b0573d6000803e3d6000fd5b505060408051338152602081018790529081018590527ff1b38881d7f4b2b12141c5f39c5124545d6112532eb6afbe9630cdbde3ee53e992506060019050610a95565b3233146135ff57600080fd5b600354610100900460ff16156136405760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b6040516351d407ff60e11b815233600482015260248101849052604481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a3a80ffe9060640161014060405180830381865afa1580156136b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136da9190614c02565b604051638c8ff1d560e01b815233600482015260248101869052604481018590529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638c8ff1d59060640160c060405180830381865afa158015613752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137769190614c1f565b905060008260e00151116137b75760405162461bcd60e51b81526020600482015260086024820152674e4f5f545241444560c01b60448201526064016102f6565b60008260e001516064604b8560a001516137d19190614b7e565b6137db9190614cad565b6137e59190614cad565b905083158061382457508260c0015161381057808360a001516138089190614a45565b841115613824565b808360a00151613820919061484d565b8410155b6138705760405162461bcd60e51b815260206004820152600a60248201527f534c5f544f4f5f4249470000000000000000000000000000000000000000000060448201526064016102f6565b6001546080830151613882904361484d565b10156138c15760405162461bcd60e51b815260206004820152600e60248201526d4c494d49545f54494d454c4f434b60901b60448201526064016102f6565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633078fff56040518163ffffffff1660e01b8152600401602060405180830381865afa158015613921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139459190614904565b9050841580613a215750806001600160a01b03166335b03c176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561398d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139b19190614904565b6001600160a01b03166324abd3fb886040518263ffffffff1660e01b81526004016139de91815260200190565b602060405180830381865afa1580156139fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a1f9190614755565b155b15613b025760405163a354418160e01b81523360048201526024810188905260448101879052606481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a354418190608401600060405180830381600087803b158015613a9c57600080fd5b505af1158015613ab0573d6000803e3d6000fd5b505060408051338152602081018b9052908101899052606081018890527f1fc4a6c7ffe506697979b8ed54dc4135cd1ecd26a2745f70b760a2492222b3169250608001905060405180910390a1613e8c565b60008460e0015184602001518660600151613b1d9190614b7e565b613b279190614b7e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cfbacc148660200151846001600160a01b0316633c88e8826040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bbf9190614b65565b613bca600286614cad565b613bd49190614cad565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526004810192909252602482015260006044820181905260648201526084016020604051808303816000875af1158015613c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c619190614b65565b85606001818151613c72919061484d565b905250604051631a97b52160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d4bda90890613cc1908890600401614dd2565b600060405180830381600087803b158015613cdb57600080fd5b505af1158015613cef573d6000803e3d6000fd5b505050506000826001600160a01b031663fa8dd4988a60046402540be40086613d189190614cad565b6040518463ffffffff1660e01b8152600401613d3693929190614bb3565b6020604051808303816000875af1158015613d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d799190614b65565b6040805160c08082018352338252602082018d81528284018d815260a0808d015160608601908152938d01511515608086019081529085018e81529551635c109dfd60e11b81526004810188905294516001600160a01b0390811660248701529251604486015290516064850152915160848401529051151560a4830152915160c482015291925084169063b8213bfa9060e401600060405180830381600087803b158015613e2757600080fd5b505af1158015613e3b573d6000803e3d6000fd5b505060408051338152602081018d90529081018b9052606081018a9052608081018490527feab935bd2d632c4b4e1573d123433c1ec04a6fde3f29909c2bbe5d8ca4c01037925060a0019050611dbf565b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa158015613ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f179190614904565b6001600160a01b0316336001600160a01b031614613f625760405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b60448201526064016102f6565b60008111613f9c5760405162461bcd60e51b8152602060048201526007602482015266056414c55455f360cc1b60448201526064016102f6565b6001819055604080518181526013918101919091527f6c696d69744f726465727354696d656c6f636b000000000000000000000000006060820152602081018290527f8cf3e35f6221b16e1670a3413180c9484bf5aa71787905909fa82a6a2662e9ab90608001610c11565b32331461401457600080fd5b600354610100900460ff16156140555760405162461bcd60e51b81526004016102f690602080825260049082015263444f4e4560e01b604082015260600190565b6040516351d407ff60e11b815233600482015260248101849052604481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a3a80ffe9060640161014060405180830381865afa1580156140cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140ef9190614c02565b604051638c8ff1d560e01b815233600482015260248101869052604481018590529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638c8ff1d59060640160c060405180830381865afa158015614167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061418b9190614c1f565b905060008260e00151116141cc5760405162461bcd60e51b81526020600482015260086024820152674e4f5f545241444560c01b60448201526064016102f6565b60015460608201516141de904361484d565b101561421d5760405162461bcd60e51b815260206004820152600e60248201526d4c494d49545f54494d454c4f434b60901b60448201526064016102f6565b604051637fdb96f360e01b81523360048201526024810186905260448101859052606481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637fdb96f390608401600060405180830381600087803b15801561429357600080fd5b505af11580156142a7573d6000803e3d6000fd5b50506040805133815260208101899052908101879052606081018690527f7e06a81c7a47891ccc7455b5ccb2ed850e32bb655ccda67eb3ebaaeed83242a4925060800190506123bb565b8051602082015160408084015160a085015160c08601519251638c8ff1d560e01b81526001600160a01b03868116600483015260248201869052604482018490526000967f0000000000000000000000000000000000000000000000000000000000000000821696636bc84d599691959094909390926402540be400917f000000000000000000000000000000000000000000000000000000000000000090911690638c8ff1d59060640160c060405180830381865afa1580156143b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906143dd9190614c1f565b602001518a606001516143f09190614b7e565b6143fa9190614cad565b60e08a8101516040519189901b7fffffffff000000000000000000000000000000000000000000000000000000001682526001600160a01b039790971660048201526024810195909552604485019390935260648401919091521515608483015260a482015260c481019190915260e401602060405180830381865afa158015614488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144ac9190614b65565b92915050565b600080600080600060a086880312156144ca57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156144ff57600080fd5b5035919050565b604051610140810167ffffffffffffffff8111828210171561453857634e487b7160e01b600052604160045260246000fd5b60405290565b6040516101a0810167ffffffffffffffff8111828210171561453857634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461458557600080fd5b50565b803561459381614570565b919050565b801515811461458557600080fd5b803561459381614598565b80356003811061459357600080fd5b60008060008060008587036101c08112156145da57600080fd5b610140808212156145ea57600080fd5b6145f2614506565b91506145fd88614588565b82526020880135602083015260408801356040830152606088013560608301526080880135608083015260a088013560a083015261463d60c089016145a6565b60c083015260e088013560e08301526101008089013581840152506101208089013581840152508196506146728189016145b1565b95505050610160860135925061018086013591506146936101a08701614588565b90509295509295909350565b600080604083850312156146b257600080fd5b50508035926020909101359150565b60008060008060008060c087890312156146da57600080fd5b8635600481106146e957600080fd5b955060208701356146f981614570565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060006060848603121561473357600080fd5b505081359360208301359350604090920135919050565b805161459381614598565b60006020828403121561476757600080fd5b815161477281614598565b9392505050565b805161459381614570565b60006101a0828403121561479757600080fd5b61479f61453e565b6147a883614779565b8152602083015160208201526040830151604082015260608301516060820152608083015160808201526147de60a0840161474a565b60a082015260c0838101519082015260e080840151908201526101008084015190820152610120808401519082015261014080840151908201526101608084015190820152610180928301519281019290925250919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561485f5761485f614837565b500390565b81516001600160a01b031681526101a081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516148b160a084018215159052565b5060c0838101519083015260e08084015190830152610100808401519083015261012080840151908301526101408084015190830152610160808401519083015261018092830151929091019190915290565b60006020828403121561491657600080fd5b815161477281614570565b6000610140828403121561493457600080fd5b61493c614506565b905061494782614779565b81526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015261498760c0830161474a565b60c082015260e082015160e082015261010080830151818301525061012080830151818301525092915050565b60006101e082840312156149c757600080fd5b60405160c0810181811067ffffffffffffffff821117156149f857634e487b7160e01b600052604160045260246000fd5b604052614a058484614921565b81526101408301516020820152610160830151604082015261018083015160608201526101a083015160808201526101c09092015160a083015250919050565b60008219821115614a5857614a58614837565b500190565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151614aaf60c084018215159052565b5060e08181015190830152610100808201519083015261012090810151910152565b614adc828251614a5d565b60208101516101408301526040810151610160830152606081015161018083015260808101516101a083015260a001516101c090910152565b82815261020081016147726020830184614ad1565b6000825160005b81811015614b4b5760208186018101518583015201614b31565b81811115614b5a576000828501525b509190910192915050565b600060208284031215614b7757600080fd5b5051919050565b6000816000190483118215151615614b9857614b98614837565b500290565b634e487b7160e01b600052602160045260246000fd5b8381526060810160058410614bca57614bca614b9d565b602082019390935260400152919050565b6102208101614bea8286614ad1565b836101e0830152821515610200830152949350505050565b60006101408284031215614c1557600080fd5b6147728383614921565b600060c08284031215614c3157600080fd5b60405160c0810181811067ffffffffffffffff82111715614c6257634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a0830151614ca181614598565b60a08201529392505050565b600082614cca57634e487b7160e01b600052601260045260246000fd5b500490565b60048110614cdf57614cdf614b9d565b9052565b6001600160a01b03815116825260208101516020830152604081015160408301526060810151614d166060840182614ccf565b505050565b608081016144ac8284614ce3565b60008060408385031215614d3c57600080fd5b505080516020909101519092909150565b600060e0820190506001600160a01b038085511683526020850151602084015280604086015116604084015250606084015160608301526080840151608083015260a0840151614da060a0840182614ccf565b508260c08301529392505050565b60a08101614dbc8285614ce3565b6001600160a01b03831660808301529392505050565b61014081016144ac8284614a5d56fea26469706673582212201c1ec88091ba982f159a4e472f9275b76387100048eb30d3770ac8744cc8f5af64736f6c634300080e0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeNftOrder(uint8,address,uint256,uint256,uint256,uint256)": {
        "notice": "执行订单的函数，机器人执行的"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9092,
        "contract": "contracts/GNSTradingV6_1.sol:GNSTradingV6_1",
        "label": "maxPosDai",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 9095,
        "contract": "contracts/GNSTradingV6_1.sol:GNSTradingV6_1",
        "label": "limitOrdersTimelock",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 9098,
        "contract": "contracts/GNSTradingV6_1.sol:GNSTradingV6_1",
        "label": "marketOrdersTimeout",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9100,
        "contract": "contracts/GNSTradingV6_1.sol:GNSTradingV6_1",
        "label": "isPaused",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 9102,
        "contract": "contracts/GNSTradingV6_1.sol:GNSTradingV6_1",
        "label": "isDone",
        "offset": 1,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
